[
  uuid(8D23F765-046D-41C2-B7F3-A923C98ECAD4), 
  version(1.0), 
  helpstring("SIGQuickChat Library"), 
  control
    
]
library SIGQuickChat
{

  importlib("stdole2.tlb");
  importlib("Exodus.exe");

  [
    uuid(C85D2D27-F667-42A7-8075-6B6581713F44), 
    version(1.0), 
    helpstring("Events interface for ActiveFormX Control")
  ]
   dispinterface IActiveFormXEvents
  {
    properties:
    methods:
    [
    id(0x000000C9)
    ]
    void OnActivate( void );
    [
    id(0x000000CA)
    ]
    void OnClick( void );
    [
    id(0x000000CB)
    ]
    void OnCreate( void );
    [
    id(0x000000CC)
    ]
    void OnDblClick( void );
    [
    id(0x000000CD)
    ]
    void OnDestroy( void );
    [
    id(0x000000CE)
    ]
    void OnDeactivate( void );
    [
    id(0x000000CF)
    ]
    void OnKeyPress([in, out] short * Key );
    [
    id(0x000000D0)
    ]
    void OnMouseEnter( void );
    [
    id(0x000000D1)
    ]
    void OnMouseLeave( void );
    [
    id(0x000000D2)
    ]
    void OnPaint( void );
  };

  [
    uuid(88E6C2AB-1781-41E5-8C97-D5FA27471403), 
    version(1.0), 
    helpstring("ActiveFormX Control"), 
    control
  ]
  coclass ActiveFormX
  {
    [default] interface IActiveFormX;
    [default, source] dispinterface IActiveFormXEvents;
  };

  [
    uuid(B6A180E4-380D-4BC4-AE87-01707917EB4D), 
    version(1.0)
  ]
  typedef enum tagTxActiveFormBorderStyle
  {
    [
    helpstring("afbNone")
    ]
    afbNone = 0, 
    [
    helpstring("afbSingle")
    ]
    afbSingle = 1, 
    [
    helpstring("afbSunken")
    ]
    afbSunken = 2, 
    [
    helpstring("afbRaised")
    ]
    afbRaised = 3
  } TxActiveFormBorderStyle;

  [
    uuid(9293356F-4A73-476D-9EFD-B7EF98A14D8C), 
    version(1.0)
  ]
  typedef enum tagTxPrintScale
  {
    [
    helpstring("poNone")
    ]
    poNone = 0, 
    [
    helpstring("poProportional")
    ]
    poProportional = 1, 
    [
    helpstring("poPrintToFit")
    ]
    poPrintToFit = 2
  } TxPrintScale;

  [
    uuid(CD901BC1-299F-4A16-9B77-E3A153EF8DFF), 
    version(1.0)
  ]
  typedef enum tagTxMouseButton
  {
    [
    helpstring("mbLeft")
    ]
    mbLeft = 0, 
    [
    helpstring("mbRight")
    ]
    mbRight = 1, 
    [
    helpstring("mbMiddle")
    ]
    mbMiddle = 2
  } TxMouseButton;

  [
    uuid(B879902A-922A-4CB4-9B1D-01AC1EC3D819), 
    version(1.0)
  ]
  typedef enum tagTxPopupMode
  {
    [
    helpstring("pmNone")
    ]
    pmNone = 0, 
    [
    helpstring("pmAuto")
    ]
    pmAuto = 1, 
    [
    helpstring("pmExplicit")
    ]
    pmExplicit = 2
  } TxPopupMode;

  [
    uuid(155CAA4F-A52A-463F-81B9-7D93F0B23138), 
    version(1.0)
  ]
  coclass SIGQuickChatPlugin
  {
    [default] interface IExodusPlugin;
  };

  
  [
    uuid(88631E02-B2DD-4B36-8C72-D2B8451EFD19), 
    version(1.0), 
    helpstring("Dispatch interface for ActiveFormX Control"), 
    dual, 
    oleautomation
  ]
   interface IActiveFormX: IDispatch
  {
    [
    propget, 
    id(0x000000C9), 
    hidden
    ]
    HRESULT _stdcall Visible([out, retval] VARIANT_BOOL * Value );
    [
    propput, 
    id(0x000000C9), 
    hidden
    ]
    HRESULT _stdcall Visible([in] VARIANT_BOOL Value );
    [
    propget, 
    id(0x000000CA)
    ]
    HRESULT _stdcall AutoScroll([out, retval] VARIANT_BOOL * Value );
    [
    propput, 
    id(0x000000CA)
    ]
    HRESULT _stdcall AutoScroll([in] VARIANT_BOOL Value );
    [
    propget, 
    id(0x000000CB)
    ]
    HRESULT _stdcall AutoSize([out, retval] VARIANT_BOOL * Value );
    [
    propput, 
    id(0x000000CB)
    ]
    HRESULT _stdcall AutoSize([in] VARIANT_BOOL Value );
    [
    propget, 
    id(0x000000CC)
    ]
    HRESULT _stdcall AxBorderStyle([out, retval] TxActiveFormBorderStyle * Value /*Warning: unable to validate structure name: */ );
    [
    propput, 
    id(0x000000CC)
    ]
    HRESULT _stdcall AxBorderStyle([in] TxActiveFormBorderStyle Value /*Warning: unable to validate structure name: */ );
    [
    propget, 
    id(0xFFFFFDFA)
    ]
    HRESULT _stdcall Caption([out, retval] BSTR * Value );
    [
    propput, 
    id(0xFFFFFDFA)
    ]
    HRESULT _stdcall Caption([in] BSTR Value );
    [
    propget, 
    id(0xFFFFFE0B)
    ]
    HRESULT _stdcall Color([out, retval] OLE_COLOR * Value /*Warning: unable to validate structure name: */ );
    [
    propput, 
    id(0xFFFFFE0B)
    ]
    HRESULT _stdcall Color([in] OLE_COLOR Value /*Warning: unable to validate structure name: */ );
    [
    propget, 
    id(0xFFFFFE00)
    ]
    HRESULT _stdcall Font([out, retval] IFontDisp ** Value /*Warning: unable to validate structure name: */ );
    [
    propput, 
    id(0xFFFFFE00)
    ]
    HRESULT _stdcall Font([in] IFontDisp * Value /*Warning: unable to validate structure name: */ );
    [
    propputref, 
    id(0xFFFFFE00)
    ]
    HRESULT _stdcall Font([in] IFontDisp ** Value /*Warning: unable to validate structure name: */ );
    [
    propget, 
    id(0x000000CD)
    ]
    HRESULT _stdcall KeyPreview([out, retval] VARIANT_BOOL * Value );
    [
    propput, 
    id(0x000000CD)
    ]
    HRESULT _stdcall KeyPreview([in] VARIANT_BOOL Value );
    [
    propget, 
    id(0x000000CE)
    ]
    HRESULT _stdcall PixelsPerInch([out, retval] long * Value );
    [
    propput, 
    id(0x000000CE)
    ]
    HRESULT _stdcall PixelsPerInch([in] long Value );
    [
    propget, 
    id(0x000000CF)
    ]
    HRESULT _stdcall PrintScale([out, retval] TxPrintScale * Value /*Warning: unable to validate structure name: */ );
    [
    propput, 
    id(0x000000CF)
    ]
    HRESULT _stdcall PrintScale([in] TxPrintScale Value /*Warning: unable to validate structure name: */ );
    [
    propget, 
    id(0x000000D0)
    ]
    HRESULT _stdcall Scaled([out, retval] VARIANT_BOOL * Value );
    [
    propput, 
    id(0x000000D0)
    ]
    HRESULT _stdcall Scaled([in] VARIANT_BOOL Value );
    [
    propget, 
    id(0x000000D1), 
    hidden
    ]
    HRESULT _stdcall Active([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x000000D2), 
    hidden
    ]
    HRESULT _stdcall DropTarget([out, retval] VARIANT_BOOL * Value );
    [
    propput, 
    id(0x000000D2), 
    hidden
    ]
    HRESULT _stdcall DropTarget([in] VARIANT_BOOL Value );
    [
    propget, 
    id(0x000000D3), 
    hidden
    ]
    HRESULT _stdcall HelpFile([out, retval] BSTR * Value );
    [
    propput, 
    id(0x000000D3), 
    hidden
    ]
    HRESULT _stdcall HelpFile([in] BSTR Value );
    [
    propget, 
    id(0x000000D4), 
    hidden
    ]
    HRESULT _stdcall PopupMode([out, retval] TxPopupMode * Value /*Warning: unable to validate structure name: */ );
    [
    propput, 
    id(0x000000D4), 
    hidden
    ]
    HRESULT _stdcall PopupMode([in] TxPopupMode Value /*Warning: unable to validate structure name: */ );
    [
    propget, 
    id(0x000000D5), 
    hidden
    ]
    HRESULT _stdcall ScreenSnap([out, retval] VARIANT_BOOL * Value );
    [
    propput, 
    id(0x000000D5), 
    hidden
    ]
    HRESULT _stdcall ScreenSnap([in] VARIANT_BOOL Value );
    [
    propget, 
    id(0x000000D6), 
    hidden
    ]
    HRESULT _stdcall SnapBuffer([out, retval] long * Value );
    [
    propput, 
    id(0x000000D6), 
    hidden
    ]
    HRESULT _stdcall SnapBuffer([in] long Value );
    [
    propget, 
    id(0x000000D7), 
    hidden
    ]
    HRESULT _stdcall DockSite([out, retval] VARIANT_BOOL * Value );
    [
    propput, 
    id(0x000000D7), 
    hidden
    ]
    HRESULT _stdcall DockSite([in] VARIANT_BOOL Value );
    [
    propget, 
    id(0x000000D8), 
    hidden
    ]
    HRESULT _stdcall DoubleBuffered([out, retval] VARIANT_BOOL * Value );
    [
    propput, 
    id(0x000000D8), 
    hidden
    ]
    HRESULT _stdcall DoubleBuffered([in] VARIANT_BOOL Value );
    [
    propget, 
    id(0x000000D9), 
    hidden
    ]
    HRESULT _stdcall AlignDisabled([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x000000DA), 
    hidden
    ]
    HRESULT _stdcall MouseInClient([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x000000DB), 
    hidden
    ]
    HRESULT _stdcall VisibleDockClientCount([out, retval] long * Value );
    [
    propget, 
    id(0x000000DC), 
    hidden
    ]
    HRESULT _stdcall UseDockManager([out, retval] VARIANT_BOOL * Value );
    [
    propput, 
    id(0x000000DC), 
    hidden
    ]
    HRESULT _stdcall UseDockManager([in] VARIANT_BOOL Value );
    [
    propget, 
    id(0xFFFFFDFE), 
    hidden
    ]
    HRESULT _stdcall Enabled([out, retval] VARIANT_BOOL * Value );
    [
    propput, 
    id(0xFFFFFDFE), 
    hidden
    ]
    HRESULT _stdcall Enabled([in] VARIANT_BOOL Value );
    [
    propget, 
    id(0x000000DD), 
    hidden
    ]
    HRESULT _stdcall ExplicitLeft([out, retval] long * Value );
    [
    propget, 
    id(0x000000DE), 
    hidden
    ]
    HRESULT _stdcall ExplicitTop([out, retval] long * Value );
    [
    propget, 
    id(0x000000DF), 
    hidden
    ]
    HRESULT _stdcall ExplicitWidth([out, retval] long * Value );
    [
    propget, 
    id(0x000000E0), 
    hidden
    ]
    HRESULT _stdcall ExplicitHeight([out, retval] long * Value );
    [
    propget, 
    id(0x000000E1)
    ]
    HRESULT _stdcall AlignWithMargins([out, retval] VARIANT_BOOL * Value );
    [
    propput, 
    id(0x000000E1)
    ]
    HRESULT _stdcall AlignWithMargins([in] VARIANT_BOOL Value );
  };

};