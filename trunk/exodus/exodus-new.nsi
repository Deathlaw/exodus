;; -*- tab-width: 4; -*-
;    Copyright 2003, Joe Hildebrand
;
;    This file is part of Exodus.
;
;    Exodus is free software; you can redistribute it and/or modify
;    it under the terms of the GNU General Public License as published by
;    the Free Software Foundation; either version 2 of the License, or
;    (at your option) any later version.
;
;    Exodus is distributed in the hope that it will be useful,
;    but WITHOUT ANY WARRANTY; without even the implied warranty of
;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;    GNU General Public License for more details.
;
;    You should have received a copy of the GNU General Public License
;    along with Exodus; if not, write to the Free Software
;    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

; If you are trying to create a branded version of Exodus, search for
; BRANDING in this file.

/*
    2004-03-29 - Added MAP file to daily build installers.
    2004-02-11 - Lazarus Long <lazarus (dot) long (at) bigfoot (dot) com>
                (all changes were made implying the usage of a stock 2.0 version
                of NSIS).
               - removed some defines by inclusion of the corresponding
                 standard Sections.nsh file.
               - replaced the MUI inclusion file with the correponding standard
                 MUI.nsh.
               - removed and added MUI_ defines to reflect the new MUI.
               - rearranged the file contents (I'm sorry for this one but I was
                 getting lost trying to follow the flow).
               - added a series of conditional compiles for switching the
                 registry from HKCU to HKLM (I didn't go all the way and kept
                 backward compatibility because I don't know if the program
                 itself checks for some key in HKCU) to activate uncomment the
                 define USE_HKLM_KEY at the start of the script.
               - added the possibility to use header compression (using UPX).
               - added personal tweaks (can be disabled by removing a !define).
               - moved the localization strings to locale.nsh, changed labels
                 and added functions to support localization.
    2004-02-16 - Lazarus Long <lazarus (dot) long (at) bigfoot (dot) com>
               - realized that ZipDLL isn't part of the stock NSIS 2.0 so I
                 downloaded it from:
                 <http://nsis.sourceforge.net/archive/download.php?file=ZipDLLv1.2.zip>
                 and put ZipDLL.dll and ZipDLL.nsh the parent dir of the one
                 where exodus.nsi lives (the script will fail if it isn't so).
    2004-02-17 - Lazarus Long <lazarus (dot) long (at) bigfoot (dot) com>
               - I'm assuming that the example-plugin-*.* files aren't auto
                 generated by a script (if they are I'm in trouble to put this
                 to work).
               - rearranged the plugins stuff to use "example-plugin-i18n.nsi"
                 and dropped "example-plugin-en.nsi".
               - reluctantly (against my intention to keep the i18n strings all
                 in one file) created the "example-plugin-locale.nsh" in the
                 plugins dir since the plugin stuff is all there.
               - added several functions (didn't keep track of all of them but
                 they all start with "func") and removed one or two (either
                 redundanct or replaced by faster alternatives).
    2004-02-19 - Lazarus Long <lazarus (dot) long (at) bigfoot (dot) com>
               - removed the non default naming convention when the LAZARUS
                 define was set and added version information to the installer
                 (I just realized that it's better this way, especially for ME,
                 2K and XP users who see it in the Explorer).
               - renamed all the scripts that are part of the "new" branch to
                 avoid naming conflict with the current scripts.
               - added the ReserveFile for the "ZipDLL.dll" and "System.dll"
                 plugins.
               - removed the SubCaption command near the end of the script
                 (it was redundant and probably remained there from pre-MUI
                 builds).
    2004-02-24 - Lazarus Long <lazarus (dot) long (at) bigfoot (dot) com>
               - implemented the option to remove the user logs when
                 uninstalling (this implied creating a new "un-notify.ini"
                 options file).
               - fixed the warnings about the MSG_NoAdmin string not defined
                 in functions funcCheckAdmin and un.funcCheckAdmin.
*/

; exodus.nsi

/*
    installer control defines, check before making the final build
*/
;!define DEBUG ; yes this is what you are thinking it is...
;!define USE_HKLM_KEY ; hookplace in case ever the registry will switch to HKLM

!ifdef DEBUG
    !warning "$\r$\nATTENTION:  the DEBUG define is SET, make sure you disable the$\r$\n$\t$\tdefine for production!"
    !define MUI_VERBOSE "4"
!endif
!ifdef USE_HKLM_KEY
    !warning "$\r$\nATTENTION:  the USE_HKLM_KEY define is SET, make sure you are$\r$\n$\t$\tbuilding Exodus with HKLM support. If not the$\r$\n$\t$\tinstaller will read and write to the wrong registry keys!"
!endif

/*
    includes
*/
!addincludedir "."
!addincludedir ".."
!addincludedir "plugins"
!addincludedir "${NSISDIR}\Include"
!addplugindir ".."

!include "MUI.nsh"
!include "Sections.nsh"
!include "StrFunc.nsh"

/*
   ZipDLL.nsh was created for Modern UI 1.62 so this workaround is needed for it
   to accept current Modern UI version (the other way is to edit ZipDLL.nsh and
   replace MUI_MACROS_USED by MUI_INCLUDED at the top of the file).
*/
!ifdef MUI_INCLUDED
    !ifndef MUI_MACROS_USED
        !define MUI_MACROS_USED
    !endif
    !include "ZipDLL.nsh"
!endif

!include "version.nsi" ; you might want to edit version.pl to rename this file
                       ; version.nsh since it's a header inclusion (yes I know
                       ; I'm a purist)
!include "locale-new.nsh"

/*
    macros
*/
; These macros are needed until the NSIS Dev people fix the StrFunc.nsh so it can
; be included by the uninstaller (this damn stupid hack just doubles the code).
!define un.StrStrAdv "!insertmacro FUNCTION_STRING_un.StrStrAdv"
!define un.StrRep "!insertmacro FUNCTION_STRING_un.StrRep"

!macro FUNCTION_STRING_un.StrStrAdv

  !ifndef FUNCTION_STRING_un.StrStrAdv

    !echo "$\r$\n----------------------------------------------------------------------$\r$\nAdvanced Search in String Function - © 2003-2004 Diego Pedroso$\r$\n----------------------------------------------------------------------$\r$\n$\r$\n"

    !define FUNCTION_STRING_un.StrStrAdv
    !undef un.StrStrAdv

    !define un.StrStrAdv "!insertmacro FUNCTION_STRING_un.StrStrAdv_Call"

    Function un.AdvancedStrStr

     # Preparing Variables

     Exch $R9
     Exch
     Exch $R8
     Exch
     Exch 2
     Exch $R7
     Exch 2
     Exch 3
     Exch $R6
     Exch 3
     Exch 4
     Exch $R5
     Exch 4
     Exch 5
     Exch $R4
     Exch 5
     Push $R3
     Push $R2
     Push $R1
     Push $R0
     Push $9
     Push $8
     Push $7
     Push $6
     StrCpy $R2 $R4
     StrCpy $R1 $R5
     StrCpy $R4 ""
     StrCpy $R5 ""
     StrCpy $7 $R2

     # Detect Empty Input

     StrCmp $R1 "" 0 +3
       SetErrors
       Goto granddone

     StrCmp $R2 "" 0 +3
       SetErrors
       Goto granddone

     StrCmp $R6 "" 0 +2
       StrCpy $R6 >

     StrCmp $R7 "" 0 +2
       StrCpy $R7 >

     # Preparing StrStr

     StrCpy $R0 0

     IntCmp $R9 1 +2 0 +2
       StrCpy $R9 0

     IntOp $R9 $R9 + 1

     # Loops and more loops if you want...

       grandloop:

       # Detect if the loops number given by user = code runs...

       StrCpy $R4 0
       StrLen $R3 $R1
       StrCpy $6 $R3
       StrCmp $9 1 0 +4
         StrCmp $R6 "<" 0 +2
           IntOp $R3 $R3 + 1
           IntOp $R4 $R4 + 1

       StrCmp $R6 "<" 0 +5
         IntOp $R3 $R3 * -1
         StrCpy $6 $R3
         IntCmp $R0 0 +2 0 0
           IntOp $6 $6 + 1

       # Searching the string

         loop:

         # RTL...

         StrCmp $R6 "<" 0 EndBack

           IntOp $9 $R4 * -1

           StrCmp $9 0 0 +3
             StrCpy $R5 $R2 "" $R3
             Goto +2
           StrCpy $R5 $R2 $9 $R3
           Goto +2

         EndBack:

         # LTR...

         StrCpy $R5 $R2 $R3 $R4

         # Detect if the value returned is the searched...

         StrCmp $R5 $R1 done

         StrCmp $R5 "" granddone

             # If not, make a loop...

             IntOp $R4 $R4 + 1
             StrCmp $R6 "<" 0 +2
               IntOp $R3 $R3 - 1

         Goto loop

       done:

       StrCmp $R6 "<" 0 +3
         IntOp $8 $9 + $8
           Goto +2
       IntOp $8 $R4 + $8

       # Looping Calculation...

        IntOp $R0 $R0 + 1

       IntCmp $R0 $R9 0 continueloop 0

       # Customizing the string to fit user conditions (supported by loops)...

       # RTL...

         StrCmp $R6 "<" 0 EndBackward
           StrCmp $R7 ">" 0 +7
             StrCmp $8 0 0 +3
               StrCpy $R2 ""
               Goto +2
             StrCpy $R2 $7 "" $8
             StrCpy $R2 $R1$R2
             Goto +3

           StrCmp $9 0 +2
             StrCpy $R2 $R2 $9

           StrCmp $R8 1 EndForward 0
             StrCmp $R7 ">" 0 End>
               Push $6
               IntOp $6 $6 * -1
               StrCpy $R2 $R2 "" $6
               Pop $6
                 Goto +2
             End>:
             StrCpy $R2 $R2 $6
               Goto EndForward
         EndBackward:

         # LTR...

         StrCmp $R7 "<" 0 +4
           StrCpy $R2 $7 $8
           StrCpy $R2 $R2$R1
           Goto +2
         StrCpy $R2 $R2 "" $R4
         StrCmp $R8 1 EndForward 0
           StrCmp $R7 "<" 0 End<
             Push $6
             IntOp $6 $6 * 2
             StrCpy $R2 $R2 $6
             Pop $6
               Goto +2
           End<:
           StrCpy $R2 $R2 "" $R3
         EndForward:

         Goto stoploop

       continueloop:

       # Customizing the string to fits user conditions (not supported by loops)...

       # RTL...

       StrCmp $R6 "<" 0 +4
         StrCmp $9 0 +4
         StrCpy $R2 $R2 $9
           Goto +2

       # LTR...

       StrCpy $R2 $R2 "" $R4

       stoploop:

       # Return to grandloop init...

       StrCpy $9 1

       IntCmp $R0 $R9 0 grandloop 0

     StrCpy $R4 $R2

     Goto +2

     granddone:

     # Return the result to user

     StrCpy $R4 ""

     Pop $6
     Pop $7
     Pop $8
     Pop $9
     Pop $R0
     Pop $R1
     Pop $R2
     Pop $R3
     Pop $R9
     Pop $R8
     Pop $R7
     Pop $R6
     Pop $R5
     Exch $R4

    FunctionEnd

  !endif

!macroend

!macro FUNCTION_STRING_un.StrStrAdv_Call ResultVar String StrToSearchFor SearchDirection ResultStrDirection DisplayStrToSearch Loops

  !echo `$ {un.StrStrAdv} "${ResultVar}" "${String}" "${StrToSearchFor}" "${SearchDirection}" "${ResultStrDirection}" "${DisplayStrToSearch}" "${Loops}"$\r$\n`

  Push `${String}`
  Push `${StrToSearchFor}`
  Push `${SearchDirection}`
  Push `${ResultStrDirection}`
  Push `${DisplayStrToSearch}`
  Push `${Loops}`

  Call un.AdvancedStrStr

  Pop `${ResultVar}`

!macroend

!macro FUNCTION_STRING_un.StrRep

  !ifndef FUNCTION_STRING_un.StrRep

    !echo "$\r$\n----------------------------------------------------------------------$\r$\nReplace String Function - 2002-2004 Hendri Adriaens$\r$\n----------------------------------------------------------------------$\r$\n$\r$\n"

    !define FUNCTION_STRING_un.StrRep
    !undef un.StrRep
    !define un.StrRep "!insertmacro FUNCTION_STRING_un.StrRep_Call"

    Function un.StrReplace
      Exch $0 ;this will replace wrong characters
      Exch
      Exch $1 ;needs to be replaced
      Exch
      Exch 2
      Exch $2 ;the orginal string
      Push $3 ;counter
      Push $4 ;temp character
      Push $5 ;temp string
      Push $6 ;length of string that need to be replaced
      Push $7 ;length of string that will replace
      Push $R0 ;tempstring
      Push $R1 ;tempstring
      Push $R2 ;tempstring
      StrCpy $3 "-1"
      StrCpy $5 ""
      StrLen $6 $1
      StrLen $7 $0
      Loop:
      IntOp $3 $3 + 1
      StrCpy $4 $2 $6 $3
      StrCmp $4 "" ExitLoop
      StrCmp $4 $1 Replace
      Goto Loop
      Replace:
      StrCpy $R0 $2 $3
      IntOp $R2 $3 + $6
      StrCpy $R1 $2 "" $R2
      StrCpy $2 $R0$0$R1
      IntOp $3 $3 + $7
      Goto Loop
      ExitLoop:
      StrCpy $0 $2
      Pop $R2
      Pop $R1
      Pop $R0
      Pop $7
      Pop $6
      Pop $5
      Pop $4
      Pop $3
      Pop $2
      Pop $1
      Exch $0
    FunctionEnd

  !endif

!macroend

!macro FUNCTION_STRING_un.StrRep_Call ResultVar String StringToReplace ReplacementString

  !echo `$ {un.StrRep} "${ResultVar}" "${String}" "${StringToReplace}" "${ReplacementString}"$\r$\n`

  Push `${String}`
  Push `${StringToReplace}`
  Push `${ReplacementString}`

  Call un.StrReplace

  Pop `${ResultVar}`

!macroend


/*
    StrFunc.nsh calls (these functions need to be initialized)
*/
${StrStr}
; And these also until the StrFunc.nsh gets fixed to allow
; inclusion in the Uninstaller sections.
${un.StrRep}
${un.StrStrAdv}


/*
    defines
*/

; basic installer options
!define PRODUCT "Exodus"
!define PRODUCT_COPYRIGHT "GNU Public License (GPL)"
!define PRODUCT_COMMENTS "This is free! Promote Jabber and give it to a friend."
!define PRODUCT_COMPANY "Jabber.org"
!define JABBER_REGISTRY_KEY "SOFTWARE\Jabber"
!define PRODUCT_REGISTRY_KEY "${JABBER_REGISTRY_KEY}\${PRODUCT}"
!define PRODUCT_INSTALL_PATH_KEY "Install_Dir"
!define PRODUCT_RUN_KEY "Software\Microsoft\Windows\CurrentVersion\Run"
!define PRODUCT_LOCALES_KEY "InstallLocales"
!define PRODUCT_PREFS_FILE_KEY "prefs_file"
!define PRODUCT_UNINSTALL_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT}"
!define PRODUCT_RESTART_KEY "${PRODUCT_REGISTRY_KEY}\Restart"
!define PRODUCT_RESTART_CWD_KEY "cwd"
!define PRODUCT_RESTART_CMDLINE_KEY "cmdline"
!define PRODUCT_UNINSTALL_COMMAND_KEY "UninstallString"
!define PRODUCT_UNINSTALL_DISPLAY_KEY "DisplayName"
!define PRODUCT_UNINSTALL_DISPLAY_VAL "${PRODUCT} Jabber Client (remove only)"
!define PRODUCT_WINDOWCLASS "TfrmExodus"
!define PRODUCT_UNINSTALLER "Uninstall"
!define PLUGINS_PATH "${NSISDIR}\Plugins\"
!define SYSTEMDLL_FILENAME "System"
!define ZIPDLL_FILENAME "ZipDLL"
!define ZIPDLL_PATH "..\"
!define EXEC_EXTENSION ".exe"
!define DLL_EXTENSION ".dll"
!define ICON_EXTENSION ".ico"
!define BITMAP_EXTENSION ".bmp"
!define INI_EXTENSION ".ini"
!define LINK_EXTENSION ".lnk"
!define XMPP_EXTENSION ".xmpp"
!define ZIP_EXTENSION ".zip"
!define TEXT_EXTENSION ".txt"
!define XML_EXTENSION ".xml"
!define MAP_EXTENSION ".map"
!define INSTALLER_WELCOME_BITMAP \
        "${NSISDIR}\Contrib\Graphics\Wizard\nsis.bmp" ; not standard
!define INSTALLER_LANGUAGE_KEY "Language"
!define INSTALLER_STARTMENU_KEY "StartMenu"
!define INSTALLER_SWITCH_SILENT "/S"

!ifdef NO_NETWORK
    !define INSTALLER_OUTPUT "setup-standalone"
!else    
    !define INSTALLER_OUTPUT "setup"
!endif
 
!define PLUGINS_DIR "plugins"
!ifdef DAILY
     ; BRANDING: Change this PATH if different
    !define PLUGINS_DOWNLOAD_PATH "daily/${PLUGINS_DIR}"
!else
    !define PLUGINS_DOWNLOAD_PATH "${PLUGINS_DIR}"
!endif
!define CUSTOMSHELL "notify"
!define UNCUSTOMSHELL "un-notify"
!define CUSTOMSHELL_FIELD1 "Field 1"
!define CUSTOMSHELL_FIELD2 "Field 2"
!define CUSTOMSHELL_FIELD3 "Field 3"
!define CUSTOMSHELL_FIELD4 "Field 4"
!define CUSTOMSHELL_FIELD5 "Field 5"
!define CUSTOMSHELL_OPTION_TEXT "Text"
!define CUSTOMSHELL_OPTION_STATE "State"
!define CUSTOMSHELL_FIELD1_HWND "1200"
!define CUSTOMSHELL_FIELD2_HWND "1201"
!define CUSTOMSHELL_FIELD3_HWND "1202"
!define CUSTOMSHELL_FIELD4_HWND "1203"
!define CUSTOMSHELL_FIELD5_HWND "1204"
!define CUSTOMSHELL_FONT "Tahoma"
!define CUSTOMSHELL_FONT_HEIGHT "10"
!define CUSTOMSHELL_FONT_WEIGHT "700"
!define NSISDL_SUCCESSFUL "success"
!define MSN_EMOTICONS "msn_emoticons"
!define YAHOO_EMOTICONS "yahoo_emoticons"
!define IDLEHOOKS "IdleHooks"
!define RICHED "riched20"
!define RICHED_UPDATER "richupd"
!define COMCTL "comctl32"
!define COMCTL_UPDATER "50comupd"
!define WINSOCK "WS2_32"
!define WINSOCK_SYSVER "95"
!define WINSOCK_UPDATER "W95ws2setup"
!define XMPPFILE "XMPPfile"
!define CONTENT_TYPE_KEY "Content Type"
!define XMPP_CONTENT_TYPE "application/xmpp"
!define XMPP_DESC "eXtensible Messaging and Presence Protocol"
!define EDIT_FLAGS_KEY "EditFlags"
!define XMPP_EDIT_FLAGS "0x10000"
!define BROWSER_FLAGS_KEY "BrowserFlags"
!define XMPP_BROWSER_FLAGS "0x8"
!define XMPP_SHELL_KEY "XMPPfile\shell"
!define SHELL_OPEN_KEY "Open"
!define XMPP_SHELL_OPEN_COMMAND_KEY "${XMPP_SHELL_KEY}\${SHELL_OPEN_KEY}\command"
!define XMPP_SHELL_OPEN_COMMAND_VAL "-o '%1'"
!define XMPP_SHELL_OPEN_DDE_KEY "${XMPP_SHELL_KEY}\${SHELL_OPEN_KEY}\ddeexec"
!define XMPP_SHELL_OPEN_DDE_VAL "${SHELL_OPEN_KEY} '%1'"
!define XMPP_SHELL_OPEN_DDE_APP_KEY "${XMPP_SHELL_OPEN_DDE_KEY}\Application"
!define XMPP_SHELL_OPEN_DDE_IF_KEY "${XMPP_SHELL_OPEN_DDE_KEY}\IfExec"
!define IGNORE_KEY "ignore"
!define XMPP_SHELL_OPEN_DDE_TOPIC_KEY "${XMPP_SHELL_OPEN_DDE_KEY}\Topic"
!define XMPP_ACTION "XMPPAction"
!define XMPP_MIME_KEY "MIME\Database\${CONTENT_TYPE_KEY}\application/xmpp"
!define EXTENSION_KEY "Extension"
!define SSLEAY "ssleay32"
!define LIBEAY "libeay32"
!define SSL_INSTALLER "indy_openssl096k"
!define README "readme"
!define HOMEPAGE "Homepage"
!define BRANDING_FILE "branding"
!define LOCALE "locale"
!define XML_TAG_SEPARATORS "><"
!define XML_ML_TAG_SEPARATORS ">$\r$\n<"
!define LOG_PATH_XML_TAG 'log_path value="'
!define XML_TAG_END '"/'

; BRANDING: change this URL
!ifdef STAGE
    !define HOME_URL "http://192.168.1.1/stage"
!else
    !define HOME_URL "http://exodus.jabberstudio.org"
!endif

; Modern UI Settings
!define MUI_CUSTOMFUNCTION_GUIINIT funcOnGuiInit
;!define MUI_CUSTOMFUNCTION_UNGUIINIT un.funcOnGuiInit
!ifndef DEBUG
    !define MUI_ABORTWARNING
    !define MUI_UNABORTWARNING
!endif
!define MUI_ICON "${PRODUCT}${ICON_EXTENSION}"
!define MUI_HEADERIMAGE
!define MUI_HEADERIMAGE_BITMAP "${PRODUCT}-installer${BITMAP_EXTENSION}"
!define MUI_WELCOMEFINISHPAGE_BITMAP "${INSTALLER_WELCOME_BITMAP}"
!define MUI_FINISHPAGE_NOAUTOCLOSE
!ifdef USE_HKLM_KEY
    !define MUI_LANGDLL_REGISTRY_ROOT HKLM
!else
    !define MUI_LANGDLL_REGISTRY_ROOT HKCU
!endif
!define MUI_LANGDLL_REGISTRY_KEY "${PRODUCT_REGISTRY_KEY}"
!define MUI_LANGDLL_REGISTRY_VALUENAME "${INSTALLER_LANGUAGE_KEY}"
!define MUI_STARTMENUPAGE_DEFAULTFOLDER "${PRODUCT}"
!ifdef USE_HKLM_KEY
    !define MUI_STARTMENUPAGE_REGISTRY_ROOT HKLM
!else
    !define MUI_STARTMENUPAGE_REGISTRY_ROOT HKCU
!endif
!define MUI_STARTMENUPAGE_REGISTRY_KEY "${PRODUCT_REGISTRY_KEY}"
!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME "${INSTALLER_STARTMENU_KEY}"
!define MUI_LICENSEPAGE_TEXT_TOP  \
    "Exodus is licensed under the GPL.  Press Page Down to see the rest of the agreement."
!define MUI_FINISHPAGE_RUN "$INSTDIR\${PRODUCT}${EXEC_EXTENSION}"
!define MUI_FINISHPAGE_RUN_NOTCHECKED

!define MUI_UNICON "${MUI_ICON}"
!define MUI_HEADERIMAGE_UNBITMAP "${MUI_HEADERIMAGE_BITMAP}"
!define MUI_UNWELCOMEFINISHPAGE_BITMAP "${MUI_WELCOMEFINISHPAGE_BITMAP}"
!define MUI_UNFINISHPAGE_NOAUTOCLOSE
;!define MUI_UNINSTALLER ; redundant by other MUI_UN macros


/*
    global variables
*/
; Modern UI variables
Var STARTMENU_FOLDER


/*
    compression and CRC options
*/
CRCCheck on
!ifndef DEBUG
    SetCompress auto ; no effect unless the compression method is zlib
    SetCompressor lzma ; I still don't know why isn't this the default
    SetDatablockOptimize on ; reduces size a lot
!endif


/*
    Modern UI Pages
*/
; Installer pages
; !insertmacro MUI_PAGE_WELCOME
!insertmacro MUI_PAGE_LICENSE $(GPL_LICENSE_FILE)
!insertmacro MUI_PAGE_COMPONENTS
!insertmacro MUI_PAGE_DIRECTORY
!insertmacro MUI_PAGE_STARTMENU Application "$STARTMENU_FOLDER"
Page custom SetCustomShell ;Custom page
!insertmacro MUI_PAGE_INSTFILES
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
/*
    I changed this quite a bit 'cause I got angry because the uninstaller
    just unistalled Exodus without giving a second chance to cancel.
*/
!insertmacro MUI_UNPAGE_CONFIRM
;!insertmacro MUI_UNPAGE_LICENSE $(GPL_LICENSE_FILE)
;!insertmacro MUI_UNPAGE_COMPONENTS
;!insertmacro MUI_UNPAGE_DIRECTORY
;UninstPage custom un.SetCustomShell ;Custom page
!insertmacro MUI_UNPAGE_INSTFILES
!insertmacro MUI_UNPAGE_FINISH

; Modern UI Languages (first is default language)
!insertmacro MUI_LANGUAGE "English"
!insertmacro MUI_LANGUAGE "Catalan"
!insertmacro MUI_LANGUAGE "Czech"
!insertmacro MUI_LANGUAGE "Danish"
!insertmacro MUI_LANGUAGE "German"
!insertmacro MUI_LANGUAGE "Spanish"
!insertmacro MUI_LANGUAGE "French"
!insertmacro MUI_LANGUAGE "Japanese"
!insertmacro MUI_LANGUAGE "Korean"
!insertmacro MUI_LANGUAGE "Lithuanian"
!insertmacro MUI_LANGUAGE "Dutch"
!insertmacro MUI_LANGUAGE "Norwegian"
!insertmacro MUI_LANGUAGE "Polish"
!insertmacro MUI_LANGUAGE "PortugueseBR"
!insertmacro MUI_LANGUAGE "Portuguese"
!insertmacro MUI_LANGUAGE "Russian"
!insertmacro MUI_LANGUAGE "Slovenian"
!insertmacro MUI_LANGUAGE "TradChinese"

ReserveFile "${CUSTOMSHELL}${INI_EXTENSION}"
ReserveFile "${UNCUSTOMSHELL}${INI_EXTENSION}"
!insertmacro MUI_RESERVEFILE_INSTALLOPTIONS
ReserveFile "${PLUGINS_PATH}${SYSTEMDLL_FILENAME}${DLL_EXTENSION}"
ReserveFile "${ZIPDLL_PATH}${ZIPDLL_FILENAME}${DLL_EXTENSION}"

/*
   localization
*/
; Only Admins allowed to install message (MSG_NoAdmin)
!ifdef USE_HKLM_KEY
    LangString MSG_NoAdmin ${LANG_ENGLISH} "${i18n_MSG_NoAdmin_EN}"
    LangString MSG_NoAdmin ${LANG_CATALAN} "${i18n_MSG_NoAdmin_CA}"
    LangString MSG_NoAdmin ${LANG_CZECH} "${i18n_MSG_NoAdmin_CZ}"
    LangString MSG_NoAdmin ${LANG_DANISH} "${i18n_MSG_NoAdmin_DA}"
    LangString MSG_NoAdmin ${LANG_GERMAN} "${i18n_MSG_NoAdmin_DE}"
    LangString MSG_NoAdmin ${LANG_SPANISH} "${i18n_MSG_NoAdmin_ES}"
    LangString MSG_NoAdmin ${LANG_FRENCH} "${i18n_MSG_NoAdmin_FR}"
    LangString MSG_NoAdmin ${LANG_JAPANESE} "${i18n_MSG_NoAdmin_JA}"
    LangString MSG_NoAdmin ${LANG_KOREAN} "${i18n_MSG_NoAdmin_KO}"
    LangString MSG_NoAdmin ${LANG_LITHUANIAN} "${i18n_MSG_NoAdmin_LT}"
    LangString MSG_NoAdmin ${LANG_DUTCH} "${i18n_MSG_NoAdmin_NL}"
    LangString MSG_NoAdmin ${LANG_NORWEGIAN} "${i18n_MSG_NoAdmin_NO}"
    LangString MSG_NoAdmin ${LANG_POLISH} "${i18n_MSG_NoAdmin_PL}"
    LangString MSG_NoAdmin ${LANG_PORTUGUESEBR} "${i18n_MSG_NoAdmin_PT_BR}"
    LangString MSG_NoAdmin ${LANG_PORTUGUESE} "${i18n_MSG_NoAdmin_PT_PT}"
    LangString MSG_NoAdmin ${LANG_RUSSIAN} "${i18n_MSG_NoAdmin_RU}"
    LangString MSG_NoAdmin ${LANG_SLOVENIAN} "${i18n_MSG_NoAdmin_SL}"
    LangString MSG_NoAdmin ${LANG_TRADCHINESE} "${i18n_MSG_NoAdmin_ZH}"
!endif

; BRANDING: YOU MUST NOT REMOVE THE GPL!
; License Page Localization
LicenseLangString GPL_LICENSE_FILE ${LANG_ENGLISH} "${i18n_GPL_License_EN}"
LicenseLangString GPL_LICENSE_FILE ${LANG_CATALAN} "${i18n_GPL_License_CA}"
LicenseLangString GPL_LICENSE_FILE ${LANG_CZECH} "${i18n_GPL_License_CZ}"
LicenseLangString GPL_LICENSE_FILE ${LANG_DANISH} "${i18n_GPL_License_DA}"
LicenseLangString GPL_LICENSE_FILE ${LANG_GERMAN} "${i18n_GPL_License_DE}"
LicenseLangString GPL_LICENSE_FILE ${LANG_SPANISH} "${i18n_GPL_License_ES}"
LicenseLangString GPL_LICENSE_FILE ${LANG_FRENCH} "${i18n_GPL_License_FR}"
LicenseLangString GPL_LICENSE_FILE ${LANG_JAPANESE} "${i18n_GPL_License_JA}"
LicenseLangString GPL_LICENSE_FILE ${LANG_KOREAN} "${i18n_GPL_License_KO}"
LicenseLangString GPL_LICENSE_FILE ${LANG_LITHUANIAN} "${i18n_GPL_License_LT}"
LicenseLangString GPL_LICENSE_FILE ${LANG_DUTCH} "${i18n_GPL_License_NL}"
LicenseLangString GPL_LICENSE_FILE ${LANG_NORWEGIAN} "${i18n_GPL_License_NO}"
LicenseLangString GPL_LICENSE_FILE ${LANG_POLISH} "${i18n_GPL_License_PL}"
LicenseLangString GPL_LICENSE_FILE ${LANG_PORTUGUESEBR} "${i18n_GPL_License_PT_BR}"
LicenseLangString GPL_LICENSE_FILE ${LANG_PORTUGUESE} "${i18n_GPL_License_PT_PT}"
LicenseLangString GPL_LICENSE_FILE ${LANG_RUSSIAN} "${i18n_GPL_License_RU}"
LicenseLangString GPL_LICENSE_FILE ${LANG_SLOVENIAN} "${i18n_GPL_License_SL}"
LicenseLangString GPL_LICENSE_FILE ${LANG_TRADCHINESE} "${i18n_GPL_License_ZH}"

; Section name (NAME_Exodus)
LangString NAME_Exodus ${LANG_ENGLISH} "${i18n_NAME_Exodus_EN}"
LangString NAME_Exodus ${LANG_CATALAN} "${i18n_NAME_Exodus_CA}"
LangString NAME_Exodus ${LANG_CZECH} "${i18n_NAME_Exodus_CZ}"
LangString NAME_Exodus ${LANG_DANISH} "${i18n_NAME_Exodus_DA}"
LangString NAME_Exodus ${LANG_GERMAN} "${i18n_NAME_Exodus_DE}"
LangString NAME_Exodus ${LANG_SPANISH} "${i18n_NAME_Exodus_ES}"
LangString NAME_Exodus ${LANG_FRENCH} "${i18n_NAME_Exodus_FR}"
LangString NAME_Exodus ${LANG_JAPANESE} "${i18n_NAME_Exodus_JA}"
LangString NAME_Exodus ${LANG_KOREAN} "${i18n_NAME_Exodus_KO}"
LangString NAME_Exodus ${LANG_LITHUANIAN} "${i18n_NAME_Exodus_LT}"
LangString NAME_Exodus ${LANG_DUTCH} "${i18n_NAME_Exodus_NL}"
LangString NAME_Exodus ${LANG_NORWEGIAN} "${i18n_NAME_Exodus_NO}"
LangString NAME_Exodus ${LANG_POLISH} "${i18n_NAME_Exodus_PL}"
LangString NAME_Exodus ${LANG_PORTUGUESEBR} "${i18n_NAME_Exodus_PT_BR}"
LangString NAME_Exodus ${LANG_PORTUGUESE} "${i18n_NAME_Exodus_PT_PT}"
LangString NAME_Exodus ${LANG_RUSSIAN} "${i18n_NAME_Exodus_RU}"
LangString NAME_Exodus ${LANG_SLOVENIAN} "${i18n_NAME_Exodus_SL}"
LangString NAME_Exodus ${LANG_TRADCHINESE} "${i18n_NAME_Exodus_ZH}"

; Section description (DESC_Exodus)
LangString DESC_Exodus ${LANG_ENGLISH} "${i18n_DESC_Exodus_EN}"
LangString DESC_Exodus ${LANG_CATALAN} "${i18n_DESC_Exodus_CA}"
LangString DESC_Exodus ${LANG_CZECH} "${i18n_DESC_Exodus_CZ}"
LangString DESC_Exodus ${LANG_DANISH} "${i18n_DESC_Exodus_DA}"
LangString DESC_Exodus ${LANG_GERMAN} "${i18n_DESC_Exodus_DE}"
LangString DESC_Exodus ${LANG_SPANISH} "${i18n_DESC_Exodus_ES}"
LangString DESC_Exodus ${LANG_FRENCH} "${i18n_DESC_Exodus_FR}"
LangString DESC_Exodus ${LANG_JAPANESE} "${i18n_DESC_Exodus_JA}"
LangString DESC_Exodus ${LANG_KOREAN} "${i18n_DESC_Exodus_KO}"
LangString DESC_Exodus ${LANG_LITHUANIAN} "${i18n_DESC_Exodus_LT}"
LangString DESC_Exodus ${LANG_DUTCH} "${i18n_DESC_Exodus_NL}"
LangString DESC_Exodus ${LANG_NORWEGIAN} "${i18n_DESC_Exodus_NO}"
LangString DESC_Exodus ${LANG_POLISH} "${i18n_DESC_Exodus_PL}"
LangString DESC_Exodus ${LANG_PORTUGUESEBR} "${i18n_DESC_Exodus_PT_BR}"
LangString DESC_Exodus ${LANG_PORTUGUESE} "${i18n_DESC_Exodus_PT_PT}"
LangString DESC_Exodus ${LANG_RUSSIAN} "${i18n_DESC_Exodus_RU}"
LangString DESC_Exodus ${LANG_SLOVENIAN} "${i18n_DESC_Exodus_SL}"
LangString DESC_Exodus ${LANG_TRADCHINESE} "${i18n_DESC_Exodus_ZH}"

; Section name (NAME_SSL)
LangString NAME_SSL ${LANG_ENGLISH} "${i18n_NAME_SSL_EN}"
LangString NAME_SSL ${LANG_CATALAN} "${i18n_NAME_SSL_CA}"
LangString NAME_SSL ${LANG_CZECH} "${i18n_NAME_SSL_CZ}"
LangString NAME_SSL ${LANG_DANISH} "${i18n_NAME_SSL_DA}"
LangString NAME_SSL ${LANG_GERMAN} "${i18n_NAME_SSL_DE}"
LangString NAME_SSL ${LANG_SPANISH} "${i18n_NAME_SSL_ES}"
LangString NAME_SSL ${LANG_FRENCH} "${i18n_NAME_SSL_FR}"
LangString NAME_SSL ${LANG_JAPANESE} "${i18n_NAME_SSL_JA}"
LangString NAME_SSL ${LANG_KOREAN} "${i18n_NAME_SSL_KO}"
LangString NAME_SSL ${LANG_LITHUANIAN} "${i18n_NAME_SSL_LT}"
LangString NAME_SSL ${LANG_DUTCH} "${i18n_NAME_SSL_NL}"
LangString NAME_SSL ${LANG_NORWEGIAN} "${i18n_NAME_SSL_NO}"
LangString NAME_SSL ${LANG_POLISH} "${i18n_NAME_SSL_PL}"
LangString NAME_SSL ${LANG_PORTUGUESEBR} "${i18n_NAME_SSL_PT_BR}"
LangString NAME_SSL ${LANG_PORTUGUESE} "${i18n_NAME_SSL_PT_PT}"
LangString NAME_SSL ${LANG_RUSSIAN} "${i18n_NAME_SSL_RU}"
LangString NAME_SSL ${LANG_SLOVENIAN} "${i18n_NAME_SSL_SL}"
LangString NAME_SSL ${LANG_TRADCHINESE} "${i18n_NAME_SSL_ZH}"

; Section description (DESC_SSL)
LangString DESC_SSL ${LANG_ENGLISH} "${i18n_DESC_SSL_EN}"
LangString DESC_SSL ${LANG_CATALAN} "${i18n_DESC_SSL_CA}"
LangString DESC_SSL ${LANG_CZECH} "${i18n_DESC_SSL_CZ}"
LangString DESC_SSL ${LANG_DANISH} "${i18n_DESC_SSL_DA}"
LangString DESC_SSL ${LANG_GERMAN} "${i18n_DESC_SSL_DE}"
LangString DESC_SSL ${LANG_SPANISH} "${i18n_DESC_SSL_ES}"
LangString DESC_SSL ${LANG_FRENCH} "${i18n_DESC_SSL_FR}"
LangString DESC_SSL ${LANG_JAPANESE} "${i18n_DESC_SSL_JA}"
LangString DESC_SSL ${LANG_KOREAN} "${i18n_DESC_SSL_KO}"
LangString DESC_SSL ${LANG_LITHUANIAN} "${i18n_DESC_SSL_LT}"
LangString DESC_SSL ${LANG_DUTCH} "${i18n_DESC_SSL_NL}"
LangString DESC_SSL ${LANG_NORWEGIAN} "${i18n_DESC_SSL_NO}"
LangString DESC_SSL ${LANG_POLISH} "${i18n_DESC_SSL_PL}"
LangString DESC_SSL ${LANG_PORTUGUESEBR} "${i18n_DESC_SSL_PT_BR}"
LangString DESC_SSL ${LANG_PORTUGUESE} "${i18n_DESC_SSL_PT_PT}"
LangString DESC_SSL ${LANG_RUSSIAN} "${i18n_DESC_SSL_RU}"
LangString DESC_SSL ${LANG_SLOVENIAN} "${i18n_DESC_SSL_SL}"
LangString DESC_SSL ${LANG_TRADCHINESE} "${i18n_DESC_SSL_ZH}"

; Section name (NAME_Plugins)
LangString NAME_Plugins ${LANG_ENGLISH} "${i18n_NAME_Plugins_EN}"
LangString NAME_Plugins ${LANG_CATALAN} "${i18n_NAME_Plugins_CA}"
LangString NAME_Plugins ${LANG_CZECH} "${i18n_NAME_Plugins_CZ}"
LangString NAME_Plugins ${LANG_DANISH} "${i18n_NAME_Plugins_DA}"
LangString NAME_Plugins ${LANG_GERMAN} "${i18n_NAME_Plugins_DE}"
LangString NAME_Plugins ${LANG_SPANISH} "${i18n_NAME_Plugins_ES}"
LangString NAME_Plugins ${LANG_FRENCH} "${i18n_NAME_Plugins_FR}"
LangString NAME_Plugins ${LANG_JAPANESE} "${i18n_NAME_Plugins_JA}"
LangString NAME_Plugins ${LANG_KOREAN} "${i18n_NAME_Plugins_KO}"
LangString NAME_Plugins ${LANG_LITHUANIAN} "${i18n_NAME_Plugins_LT}"
LangString NAME_Plugins ${LANG_DUTCH} "${i18n_NAME_Plugins_NL}"
LangString NAME_Plugins ${LANG_NORWEGIAN} "${i18n_NAME_Plugins_NO}"
LangString NAME_Plugins ${LANG_POLISH} "${i18n_NAME_Plugins_PL}"
LangString NAME_Plugins ${LANG_PORTUGUESEBR} "${i18n_NAME_Plugins_PT_BR}"
LangString NAME_Plugins ${LANG_PORTUGUESE} "${i18n_NAME_Plugins_PT_PT}"
LangString NAME_Plugins ${LANG_RUSSIAN} "${i18n_NAME_Plugins_RU}"
LangString NAME_Plugins ${LANG_SLOVENIAN} "${i18n_NAME_Plugins_SL}"
LangString NAME_Plugins ${LANG_TRADCHINESE} "${i18n_NAME_Plugins_ZH}"

; Section description (DESC_Plugins)
LangString DESC_Plugins ${LANG_ENGLISH} "${i18n_DESC_Plugins_EN}"
LangString DESC_Plugins ${LANG_CATALAN} "${i18n_DESC_Plugins_CA}"
LangString DESC_Plugins ${LANG_CZECH} "${i18n_DESC_Plugins_CZ}"
LangString DESC_Plugins ${LANG_DANISH} "${i18n_DESC_Plugins_DA}"
LangString DESC_Plugins ${LANG_GERMAN} "${i18n_DESC_Plugins_DE}"
LangString DESC_Plugins ${LANG_SPANISH} "${i18n_DESC_Plugins_ES}"
LangString DESC_Plugins ${LANG_FRENCH} "${i18n_DESC_Plugins_FR}"
LangString DESC_Plugins ${LANG_JAPANESE} "${i18n_DESC_Plugins_JA}"
LangString DESC_Plugins ${LANG_KOREAN} "${i18n_DESC_Plugins_KO}"
LangString DESC_Plugins ${LANG_LITHUANIAN} "${i18n_DESC_Plugins_LT}"
LangString DESC_Plugins ${LANG_DUTCH} "${i18n_DESC_Plugins_NL}"
LangString DESC_Plugins ${LANG_NORWEGIAN} "${i18n_DESC_Plugins_NO}"
LangString DESC_Plugins ${LANG_POLISH} "${i18n_DESC_Plugins_PL}"
LangString DESC_Plugins ${LANG_PORTUGUESEBR} "${i18n_DESC_Plugins_PT_BR}"
LangString DESC_Plugins ${LANG_PORTUGUESE} "${i18n_DESC_Plugins_PT_PT}"
LangString DESC_Plugins ${LANG_RUSSIAN} "${i18n_DESC_Plugins_RU}"
LangString DESC_Plugins ${LANG_SLOVENIAN} "${i18n_DESC_Plugins_SL}"
LangString DESC_Plugins ${LANG_TRADCHINESE} "${i18n_DESC_Plugins_ZH}"

; Section name (NAME_Bleed)
LangString NAME_Bleed ${LANG_ENGLISH} "${i18n_NAME_Bleed_EN}"
LangString NAME_Bleed ${LANG_CATALAN} "${i18n_NAME_Bleed_CA}"
LangString NAME_Bleed ${LANG_CZECH} "${i18n_NAME_Bleed_CZ}"
LangString NAME_Bleed ${LANG_DANISH} "${i18n_NAME_Bleed_DA}"
LangString NAME_Bleed ${LANG_GERMAN} "${i18n_NAME_Bleed_DE}"
LangString NAME_Bleed ${LANG_SPANISH} "${i18n_NAME_Bleed_ES}"
LangString NAME_Bleed ${LANG_FRENCH} "${i18n_NAME_Bleed_FR}"
LangString NAME_Bleed ${LANG_JAPANESE} "${i18n_NAME_Bleed_JA}"
LangString NAME_Bleed ${LANG_KOREAN} "${i18n_NAME_Bleed_KO}"
LangString NAME_Bleed ${LANG_LITHUANIAN} "${i18n_NAME_Bleed_LT}"
LangString NAME_Bleed ${LANG_DUTCH} "${i18n_NAME_Bleed_NL}"
LangString NAME_Bleed ${LANG_NORWEGIAN} "${i18n_NAME_Bleed_NO}"
LangString NAME_Bleed ${LANG_POLISH} "${i18n_NAME_Bleed_PL}"
LangString NAME_Bleed ${LANG_PORTUGUESEBR} "${i18n_NAME_Bleed_PT_BR}"
LangString NAME_Bleed ${LANG_PORTUGUESE} "${i18n_NAME_Bleed_PT_PT}"
LangString NAME_Bleed ${LANG_RUSSIAN} "${i18n_NAME_Bleed_RU}"
LangString NAME_Bleed ${LANG_SLOVENIAN} "${i18n_NAME_Bleed_SL}"
LangString NAME_Bleed ${LANG_TRADCHINESE} "${i18n_NAME_Bleed_ZH}"

; Section description (DESC_Bleed)
LangString DESC_Bleed ${LANG_ENGLISH} "${i18n_DESC_Bleed_EN}"
LangString DESC_Bleed ${LANG_CATALAN} "${i18n_DESC_Bleed_CA}"
LangString DESC_Bleed ${LANG_CZECH} "${i18n_DESC_Bleed_CZ}"
LangString DESC_Bleed ${LANG_DANISH} "${i18n_DESC_Bleed_DA}"
LangString DESC_Bleed ${LANG_GERMAN} "${i18n_DESC_Bleed_DE}"
LangString DESC_Bleed ${LANG_SPANISH} "${i18n_DESC_Bleed_ES}"
LangString DESC_Bleed ${LANG_FRENCH} "${i18n_DESC_Bleed_FR}"
LangString DESC_Bleed ${LANG_JAPANESE} "${i18n_DESC_Bleed_JA}"
LangString DESC_Bleed ${LANG_KOREAN} "${i18n_DESC_Bleed_KO}"
LangString DESC_Bleed ${LANG_LITHUANIAN} "${i18n_DESC_Bleed_LT}"
LangString DESC_Bleed ${LANG_DUTCH} "${i18n_DESC_Bleed_NL}"
LangString DESC_Bleed ${LANG_NORWEGIAN} "${i18n_DESC_Bleed_NO}"
LangString DESC_Bleed ${LANG_POLISH} "${i18n_DESC_Bleed_PL}"
LangString DESC_Bleed ${LANG_PORTUGUESEBR} "${i18n_DESC_Bleed_PT_BR}"
LangString DESC_Bleed ${LANG_PORTUGUESE} "${i18n_DESC_Bleed_PT_PT}"
LangString DESC_Bleed ${LANG_RUSSIAN} "${i18n_DESC_Bleed_RU}"
LangString DESC_Bleed ${LANG_SLOVENIAN} "${i18n_DESC_Bleed_SL}"
LangString DESC_Bleed ${LANG_TRADCHINESE} "${i18n_DESC_Bleed_ZH}"

; Section name (NAME_Locale)
LangString NAME_Locale ${LANG_ENGLISH} "${i18n_NAME_Locale_EN}"
LangString NAME_Locale ${LANG_CATALAN} "${i18n_NAME_Locale_CA}"
LangString NAME_Locale ${LANG_CZECH} "${i18n_NAME_Locale_CZ}"
LangString NAME_Locale ${LANG_DANISH} "${i18n_NAME_Locale_DA}"
LangString NAME_Locale ${LANG_GERMAN} "${i18n_NAME_Locale_DE}"
LangString NAME_Locale ${LANG_SPANISH} "${i18n_NAME_Locale_ES}"
LangString NAME_Locale ${LANG_FRENCH} "${i18n_NAME_Locale_FR}"
LangString NAME_Locale ${LANG_JAPANESE} "${i18n_NAME_Locale_JA}"
LangString NAME_Locale ${LANG_KOREAN} "${i18n_NAME_Locale_KO}"
LangString NAME_Locale ${LANG_LITHUANIAN} "${i18n_NAME_Locale_LT}"
LangString NAME_Locale ${LANG_DUTCH} "${i18n_NAME_Locale_NL}"
LangString NAME_Locale ${LANG_NORWEGIAN} "${i18n_NAME_Locale_NO}"
LangString NAME_Locale ${LANG_POLISH} "${i18n_NAME_Locale_PL}"
LangString NAME_Locale ${LANG_PORTUGUESEBR} "${i18n_NAME_Locale_PT_BR}"
LangString NAME_Locale ${LANG_PORTUGUESE} "${i18n_NAME_Locale_PT_PT}"
LangString NAME_Locale ${LANG_RUSSIAN} "${i18n_NAME_Locale_RU}"
LangString NAME_Locale ${LANG_SLOVENIAN} "${i18n_NAME_Locale_SL}"
LangString NAME_Locale ${LANG_TRADCHINESE} "${i18n_NAME_Locale_ZH}"

; Section description (DESC_Locale)
LangString DESC_Locale ${LANG_ENGLISH} "${i18n_DESC_Locale_EN}"
LangString DESC_Locale ${LANG_CATALAN} "${i18n_DESC_Locale_CA}"
LangString DESC_Locale ${LANG_CZECH} "${i18n_DESC_Locale_CZ}"
LangString DESC_Locale ${LANG_DANISH} "${i18n_DESC_Locale_DA}"
LangString DESC_Locale ${LANG_GERMAN} "${i18n_DESC_Locale_DE}"
LangString DESC_Locale ${LANG_SPANISH} "${i18n_DESC_Locale_ES}"
LangString DESC_Locale ${LANG_FRENCH} "${i18n_DESC_Locale_FR}"
LangString DESC_Locale ${LANG_JAPANESE} "${i18n_DESC_Locale_JA}"
LangString DESC_Locale ${LANG_KOREAN} "${i18n_DESC_Locale_KO}"
LangString DESC_Locale ${LANG_LITHUANIAN} "${i18n_DESC_Locale_LT}"
LangString DESC_Locale ${LANG_DUTCH} "${i18n_DESC_Locale_NL}"
LangString DESC_Locale ${LANG_NORWEGIAN} "${i18n_DESC_Locale_NO}"
LangString DESC_Locale ${LANG_POLISH} "${i18n_DESC_Locale_PL}"
LangString DESC_Locale ${LANG_PORTUGUESEBR} "${i18n_DESC_Locale_PT_BR}"
LangString DESC_Locale ${LANG_PORTUGUESE} "${i18n_DESC_Locale_PT_PT}"
LangString DESC_Locale ${LANG_RUSSIAN} "${i18n_DESC_Locale_RU}"
LangString DESC_Locale ${LANG_SLOVENIAN} "${i18n_DESC_Locale_SL}"
LangString DESC_Locale ${LANG_TRADCHINESE} "${i18n_DESC_Locale_ZH}"

; RichEdit version message (MSG_RichEdVersion)
LangString MSG_RichEdVersion ${LANG_ENGLISH} "${i18n_MSG_RichEdVersion_EN}"
LangString MSG_RichEdVersion ${LANG_CATALAN} "${i18n_MSG_RichEdVersion_CA}"
LangString MSG_RichEdVersion ${LANG_CZECH} "${i18n_MSG_RichEdVersion_CZ}"
LangString MSG_RichEdVersion ${LANG_DANISH} "${i18n_MSG_RichEdVersion_DA}"
LangString MSG_RichEdVersion ${LANG_GERMAN} "${i18n_MSG_RichEdVersion_DE}"
LangString MSG_RichEdVersion ${LANG_SPANISH} "${i18n_MSG_RichEdVersion_ES}"
LangString MSG_RichEdVersion ${LANG_FRENCH} "${i18n_MSG_RichEdVersion_FR}"
LangString MSG_RichEdVersion ${LANG_JAPANESE} "${i18n_MSG_RichEdVersion_JA}"
LangString MSG_RichEdVersion ${LANG_KOREAN} "${i18n_MSG_RichEdVersion_KO}"
LangString MSG_RichEdVersion ${LANG_LITHUANIAN} "${i18n_MSG_RichEdVersion_LT}"
LangString MSG_RichEdVersion ${LANG_DUTCH} "${i18n_MSG_RichEdVersion_NL}"
LangString MSG_RichEdVersion ${LANG_NORWEGIAN} "${i18n_MSG_RichEdVersion_NO}"
LangString MSG_RichEdVersion ${LANG_POLISH} "${i18n_MSG_RichEdVersion_PL}"
LangString MSG_RichEdVersion ${LANG_PORTUGUESEBR} "${i18n_MSG_RichEdVersion_PT_BR}"
LangString MSG_RichEdVersion ${LANG_PORTUGUESE} "${i18n_MSG_RichEdVersion_PT_PT}"
LangString MSG_RichEdVersion ${LANG_RUSSIAN} "${i18n_MSG_RichEdVersion_RU}"
LangString MSG_RichEdVersion ${LANG_SLOVENIAN} "${i18n_MSG_RichEdVersion_SL}"
LangString MSG_RichEdVersion ${LANG_TRADCHINESE} "${i18n_MSG_RichEdVersion_ZH}"

; RichEdit upgrade message (MSG_RichEdUpgrade)
LangString MSG_RichEdUpgrade ${LANG_ENGLISH} "${i18n_MSG_RichEdUpgrade_EN}"
LangString MSG_RichEdUpgrade ${LANG_CATALAN} "${i18n_MSG_RichEdUpgrade_CA}"
LangString MSG_RichEdUpgrade ${LANG_CZECH} "${i18n_MSG_RichEdUpgrade_CZ}"
LangString MSG_RichEdUpgrade ${LANG_DANISH} "${i18n_MSG_RichEdUpgrade_DA}"
LangString MSG_RichEdUpgrade ${LANG_GERMAN} "${i18n_MSG_RichEdUpgrade_DE}"
LangString MSG_RichEdUpgrade ${LANG_SPANISH} "${i18n_MSG_RichEdUpgrade_ES}"
LangString MSG_RichEdUpgrade ${LANG_FRENCH} "${i18n_MSG_RichEdUpgrade_FR}"
LangString MSG_RichEdUpgrade ${LANG_JAPANESE} "${i18n_MSG_RichEdUpgrade_JA}"
LangString MSG_RichEdUpgrade ${LANG_KOREAN} "${i18n_MSG_RichEdUpgrade_KO}"
LangString MSG_RichEdUpgrade ${LANG_LITHUANIAN} "${i18n_MSG_RichEdUpgrade_LT}"
LangString MSG_RichEdUpgrade ${LANG_DUTCH} "${i18n_MSG_RichEdUpgrade_NL}"
LangString MSG_RichEdUpgrade ${LANG_NORWEGIAN} "${i18n_MSG_RichEdUpgrade_NO}"
LangString MSG_RichEdUpgrade ${LANG_POLISH} "${i18n_MSG_RichEdUpgrade_PL}"
LangString MSG_RichEdUpgrade ${LANG_PORTUGUESEBR} "${i18n_MSG_RichEdUpgrade_PT_BR}"
LangString MSG_RichEdUpgrade ${LANG_PORTUGUESE} "${i18n_MSG_RichEdUpgrade_PT_PT}"
LangString MSG_RichEdUpgrade ${LANG_RUSSIAN} "${i18n_MSG_RichEdUpgrade_RU}"
LangString MSG_RichEdUpgrade ${LANG_SLOVENIAN} "${i18n_MSG_RichEdUpgrade_SL}"
LangString MSG_RichEdUpgrade ${LANG_TRADCHINESE} "${i18n_MSG_RichEdUpgrade_ZH}"

; RichEdit upgrade abort message (MSG_RichEdAbort)
LangString MSG_RichEdAbort ${LANG_ENGLISH} "${i18n_MSG_RichEdAbort_EN}"
LangString MSG_RichEdAbort ${LANG_CATALAN} "${i18n_MSG_RichEdAbort_CA}"
LangString MSG_RichEdAbort ${LANG_CZECH} "${i18n_MSG_RichEdAbort_CZ}"
LangString MSG_RichEdAbort ${LANG_DANISH} "${i18n_MSG_RichEdAbort_DA}"
LangString MSG_RichEdAbort ${LANG_GERMAN} "${i18n_MSG_RichEdAbort_DE}"
LangString MSG_RichEdAbort ${LANG_SPANISH} "${i18n_MSG_RichEdAbort_ES}"
LangString MSG_RichEdAbort ${LANG_FRENCH} "${i18n_MSG_RichEdAbort_FR}"
LangString MSG_RichEdAbort ${LANG_JAPANESE} "${i18n_MSG_RichEdAbort_JA}"
LangString MSG_RichEdAbort ${LANG_KOREAN} "${i18n_MSG_RichEdAbort_KO}"
LangString MSG_RichEdAbort ${LANG_LITHUANIAN} "${i18n_MSG_RichEdAbort_LT}"
LangString MSG_RichEdAbort ${LANG_DUTCH} "${i18n_MSG_RichEdAbort_NL}"
LangString MSG_RichEdAbort ${LANG_NORWEGIAN} "${i18n_MSG_RichEdAbort_NO}"
LangString MSG_RichEdAbort ${LANG_POLISH} "${i18n_MSG_RichEdAbort_PL}"
LangString MSG_RichEdAbort ${LANG_PORTUGUESEBR} "${i18n_MSG_RichEdAbort_PT_BR}"
LangString MSG_RichEdAbort ${LANG_PORTUGUESE} "${i18n_MSG_RichEdAbort_PT_PT}"
LangString MSG_RichEdAbort ${LANG_RUSSIAN} "${i18n_MSG_RichEdAbort_RU}"
LangString MSG_RichEdAbort ${LANG_SLOVENIAN} "${i18n_MSG_RichEdAbort_SL}"
LangString MSG_RichEdAbort ${LANG_TRADCHINESE} "${i18n_MSG_RichEdAbort_ZH}"

; No reboot message (MSG_NoReboot)
LangString MSG_NoReboot ${LANG_ENGLISH} "${i18n_MSG_NoReboot_EN}"
LangString MSG_NoReboot ${LANG_CATALAN} "${i18n_MSG_NoReboot_CA}"
LangString MSG_NoReboot ${LANG_CZECH} "${i18n_MSG_NoReboot_CZ}"
LangString MSG_NoReboot ${LANG_DANISH} "${i18n_MSG_NoReboot_DA}"
LangString MSG_NoReboot ${LANG_GERMAN} "${i18n_MSG_NoReboot_DE}"
LangString MSG_NoReboot ${LANG_SPANISH} "${i18n_MSG_NoReboot_ES}"
LangString MSG_NoReboot ${LANG_FRENCH} "${i18n_MSG_NoReboot_FR}"
LangString MSG_NoReboot ${LANG_JAPANESE} "${i18n_MSG_NoReboot_JA}"
LangString MSG_NoReboot ${LANG_KOREAN} "${i18n_MSG_NoReboot_KO}"
LangString MSG_NoReboot ${LANG_LITHUANIAN} "${i18n_MSG_NoReboot_LT}"
LangString MSG_NoReboot ${LANG_DUTCH} "${i18n_MSG_NoReboot_NL}"
LangString MSG_NoReboot ${LANG_NORWEGIAN} "${i18n_MSG_NoReboot_NO}"
LangString MSG_NoReboot ${LANG_POLISH} "${i18n_MSG_NoReboot_PL}"
LangString MSG_NoReboot ${LANG_PORTUGUESEBR} "${i18n_MSG_NoReboot_PT_BR}"
LangString MSG_NoReboot ${LANG_PORTUGUESE} "${i18n_MSG_NoReboot_PT_PT}"
LangString MSG_NoReboot ${LANG_RUSSIAN} "${i18n_MSG_NoReboot_RU}"
LangString MSG_NoReboot ${LANG_SLOVENIAN} "${i18n_MSG_NoReboot_SL}"
LangString MSG_NoReboot ${LANG_TRADCHINESE} "${i18n_MSG_NoReboot_ZH}"

; RichEdit upgrade OK message (MSG_RichEdOK)
LangString MSG_RichEdOK ${LANG_ENGLISH} "${i18n_MSG_RichEdOK_EN}"
LangString MSG_RichEdOK ${LANG_CATALAN} "${i18n_MSG_RichEdOK_CA}"
LangString MSG_RichEdOK ${LANG_CZECH} "${i18n_MSG_RichEdOK_CZ}"
LangString MSG_RichEdOK ${LANG_DANISH} "${i18n_MSG_RichEdOK_DA}"
LangString MSG_RichEdOK ${LANG_GERMAN} "${i18n_MSG_RichEdOK_DE}"
LangString MSG_RichEdOK ${LANG_SPANISH} "${i18n_MSG_RichEdOK_ES}"
LangString MSG_RichEdOK ${LANG_FRENCH} "${i18n_MSG_RichEdOK_FR}"
LangString MSG_RichEdOK ${LANG_JAPANESE} "${i18n_MSG_RichEdOK_JA}"
LangString MSG_RichEdOK ${LANG_KOREAN} "${i18n_MSG_RichEdOK_KO}"
LangString MSG_RichEdOK ${LANG_LITHUANIAN} "${i18n_MSG_RichEdOK_LT}"
LangString MSG_RichEdOK ${LANG_DUTCH} "${i18n_MSG_RichEdOK_NL}"
LangString MSG_RichEdOK ${LANG_NORWEGIAN} "${i18n_MSG_RichEdOK_NO}"
LangString MSG_RichEdOK ${LANG_POLISH} "${i18n_MSG_RichEdOK_PL}"
LangString MSG_RichEdOK ${LANG_PORTUGUESEBR} "${i18n_MSG_RichEdOK_PT_BR}"
LangString MSG_RichEdOK ${LANG_PORTUGUESE} "${i18n_MSG_RichEdOK_PT_PT}"
LangString MSG_RichEdOK ${LANG_RUSSIAN} "${i18n_MSG_RichEdOK_RU}"
LangString MSG_RichEdOK ${LANG_SLOVENIAN} "${i18n_MSG_RichEdOK_SL}"
LangString MSG_RichEdOK ${LANG_TRADCHINESE} "${i18n_MSG_RichEdOK_ZH}"

; COM controls version message (MSG_COMCtlVersion)
LangString MSG_COMCtlVersion ${LANG_ENGLISH} "${i18n_MSG_COMCtlVersion_EN}"
LangString MSG_COMCtlVersion ${LANG_CATALAN} "${i18n_MSG_COMCtlVersion_CA}"
LangString MSG_COMCtlVersion ${LANG_CZECH} "${i18n_MSG_COMCtlVersion_CZ}"
LangString MSG_COMCtlVersion ${LANG_DANISH} "${i18n_MSG_COMCtlVersion_DA}"
LangString MSG_COMCtlVersion ${LANG_GERMAN} "${i18n_MSG_COMCtlVersion_DE}"
LangString MSG_COMCtlVersion ${LANG_SPANISH} "${i18n_MSG_COMCtlVersion_ES}"
LangString MSG_COMCtlVersion ${LANG_FRENCH} "${i18n_MSG_COMCtlVersion_FR}"
LangString MSG_COMCtlVersion ${LANG_JAPANESE} "${i18n_MSG_COMCtlVersion_JA}"
LangString MSG_COMCtlVersion ${LANG_KOREAN} "${i18n_MSG_COMCtlVersion_KO}"
LangString MSG_COMCtlVersion ${LANG_LITHUANIAN} "${i18n_MSG_COMCtlVersion_LT}"
LangString MSG_COMCtlVersion ${LANG_DUTCH} "${i18n_MSG_COMCtlVersion_NL}"
LangString MSG_COMCtlVersion ${LANG_NORWEGIAN} "${i18n_MSG_COMCtlVersion_NO}"
LangString MSG_COMCtlVersion ${LANG_POLISH} "${i18n_MSG_COMCtlVersion_PL}"
LangString MSG_COMCtlVersion ${LANG_PORTUGUESEBR} "${i18n_MSG_COMCtlVersion_PT_BR}"
LangString MSG_COMCtlVersion ${LANG_PORTUGUESE} "${i18n_MSG_COMCtlVersion_PT_PT}"
LangString MSG_COMCtlVersion ${LANG_RUSSIAN} "${i18n_MSG_COMCtlVersion_RU}"
LangString MSG_COMCtlVersion ${LANG_SLOVENIAN} "${i18n_MSG_COMCtlVersion_SL}"
LangString MSG_COMCtlVersion ${LANG_TRADCHINESE} "${i18n_MSG_COMCtlVersion_ZH}"

; COM controls upgrade message (MSG_COMCtlUpgrade)
LangString MSG_COMCtlUpgrade ${LANG_ENGLISH} "${i18n_MSG_COMCtlUpgrade_EN}"
LangString MSG_COMCtlUpgrade ${LANG_CATALAN} "${i18n_MSG_COMCtlUpgrade_CA}"
LangString MSG_COMCtlUpgrade ${LANG_CZECH} "${i18n_MSG_COMCtlUpgrade_CZ}"
LangString MSG_COMCtlUpgrade ${LANG_DANISH} "${i18n_MSG_COMCtlUpgrade_DA}"
LangString MSG_COMCtlUpgrade ${LANG_GERMAN} "${i18n_MSG_COMCtlUpgrade_DE}"
LangString MSG_COMCtlUpgrade ${LANG_SPANISH} "${i18n_MSG_COMCtlUpgrade_ES}"
LangString MSG_COMCtlUpgrade ${LANG_FRENCH} "${i18n_MSG_COMCtlUpgrade_FR}"
LangString MSG_COMCtlUpgrade ${LANG_JAPANESE} "${i18n_MSG_COMCtlUpgrade_JA}"
LangString MSG_COMCtlUpgrade ${LANG_KOREAN} "${i18n_MSG_COMCtlUpgrade_KO}"
LangString MSG_COMCtlUpgrade ${LANG_LITHUANIAN} "${i18n_MSG_COMCtlUpgrade_LT}"
LangString MSG_COMCtlUpgrade ${LANG_DUTCH} "${i18n_MSG_COMCtlUpgrade_NL}"
LangString MSG_COMCtlUpgrade ${LANG_NORWEGIAN} "${i18n_MSG_COMCtlUpgrade_NO}"
LangString MSG_COMCtlUpgrade ${LANG_POLISH} "${i18n_MSG_COMCtlUpgrade_PL}"
LangString MSG_COMCtlUpgrade ${LANG_PORTUGUESEBR} "${i18n_MSG_COMCtlUpgrade_PT_BR}"
LangString MSG_COMCtlUpgrade ${LANG_PORTUGUESE} "${i18n_MSG_COMCtlUpgrade_PT_PT}"
LangString MSG_COMCtlUpgrade ${LANG_RUSSIAN} "${i18n_MSG_COMCtlUpgrade_RU}"
LangString MSG_COMCtlUpgrade ${LANG_SLOVENIAN} "${i18n_MSG_COMCtlUpgrade_SL}"
LangString MSG_COMCtlUpgrade ${LANG_TRADCHINESE} "${i18n_MSG_COMCtlUpgrade_ZH}"

; COM controls abort message (MSG_COMCtlAbort)
LangString MSG_COMCtlAbort ${LANG_ENGLISH} "${i18n_MSG_COMCtlAbort_EN}"
LangString MSG_COMCtlAbort ${LANG_CATALAN} "${i18n_MSG_COMCtlAbort_CA}"
LangString MSG_COMCtlAbort ${LANG_CZECH} "${i18n_MSG_COMCtlAbort_CZ}"
LangString MSG_COMCtlAbort ${LANG_DANISH} "${i18n_MSG_COMCtlAbort_DA}"
LangString MSG_COMCtlAbort ${LANG_GERMAN} "${i18n_MSG_COMCtlAbort_DE}"
LangString MSG_COMCtlAbort ${LANG_SPANISH} "${i18n_MSG_COMCtlAbort_ES}"
LangString MSG_COMCtlAbort ${LANG_FRENCH} "${i18n_MSG_COMCtlAbort_FR}"
LangString MSG_COMCtlAbort ${LANG_JAPANESE} "${i18n_MSG_COMCtlAbort_JA}"
LangString MSG_COMCtlAbort ${LANG_KOREAN} "${i18n_MSG_COMCtlAbort_KO}"
LangString MSG_COMCtlAbort ${LANG_LITHUANIAN} "${i18n_MSG_COMCtlAbort_LT}"
LangString MSG_COMCtlAbort ${LANG_DUTCH} "${i18n_MSG_COMCtlAbort_NL}"
LangString MSG_COMCtlAbort ${LANG_NORWEGIAN} "${i18n_MSG_COMCtlAbort_NO}"
LangString MSG_COMCtlAbort ${LANG_POLISH} "${i18n_MSG_COMCtlAbort_PL}"
LangString MSG_COMCtlAbort ${LANG_PORTUGUESEBR} "${i18n_MSG_COMCtlAbort_PT_BR}"
LangString MSG_COMCtlAbort ${LANG_PORTUGUESE} "${i18n_MSG_COMCtlAbort_PT_PT}"
LangString MSG_COMCtlAbort ${LANG_RUSSIAN} "${i18n_MSG_COMCtlAbort_RU}"
LangString MSG_COMCtlAbort ${LANG_SLOVENIAN} "${i18n_MSG_COMCtlAbort_SL}"
LangString MSG_COMCtlAbort ${LANG_TRADCHINESE} "${i18n_MSG_COMCtlAbort_ZH}"

; COM controls upgrade OK message (MSG_COMCtlOK)
LangString MSG_COMCtlOK ${LANG_ENGLISH} "${i18n_MSG_COMCtlOK_EN}"
LangString MSG_COMCtlOK ${LANG_CATALAN} "${i18n_MSG_COMCtlOK_CA}"
LangString MSG_COMCtlOK ${LANG_CZECH} "${i18n_MSG_COMCtlOK_CZ}"
LangString MSG_COMCtlOK ${LANG_DANISH} "${i18n_MSG_COMCtlOK_DA}"
LangString MSG_COMCtlOK ${LANG_GERMAN} "${i18n_MSG_COMCtlOK_DE}"
LangString MSG_COMCtlOK ${LANG_SPANISH} "${i18n_MSG_COMCtlOK_ES}"
LangString MSG_COMCtlOK ${LANG_FRENCH} "${i18n_MSG_COMCtlOK_FR}"
LangString MSG_COMCtlOK ${LANG_JAPANESE} "${i18n_MSG_COMCtlOK_JA}"
LangString MSG_COMCtlOK ${LANG_KOREAN} "${i18n_MSG_COMCtlOK_KO}"
LangString MSG_COMCtlOK ${LANG_LITHUANIAN} "${i18n_MSG_COMCtlOK_LT}"
LangString MSG_COMCtlOK ${LANG_DUTCH} "${i18n_MSG_COMCtlOK_NL}"
LangString MSG_COMCtlOK ${LANG_NORWEGIAN} "${i18n_MSG_COMCtlOK_NO}"
LangString MSG_COMCtlOK ${LANG_POLISH} "${i18n_MSG_COMCtlOK_PL}"
LangString MSG_COMCtlOK ${LANG_PORTUGUESEBR} "${i18n_MSG_COMCtlOK_PT_BR}"
LangString MSG_COMCtlOK ${LANG_PORTUGUESE} "${i18n_MSG_COMCtlOK_PT_PT}"
LangString MSG_COMCtlOK ${LANG_RUSSIAN} "${i18n_MSG_COMCtlOK_RU}"
LangString MSG_COMCtlOK ${LANG_SLOVENIAN} "${i18n_MSG_COMCtlOK_SL}"
LangString MSG_COMCtlOK ${LANG_TRADCHINESE} "${i18n_MSG_COMCtlOK_ZH}"

; Winsock2 upgrade message (MSG_WinsockUpgrade)
LangString MSG_WinsockUpgrade ${LANG_ENGLISH} "${i18n_MSG_WinsockUpgrade_EN}"
LangString MSG_WinsockUpgrade ${LANG_CATALAN} "${i18n_MSG_WinsockUpgrade_CA}"
LangString MSG_WinsockUpgrade ${LANG_CZECH} "${i18n_MSG_WinsockUpgrade_CZ}"
LangString MSG_WinsockUpgrade ${LANG_DANISH} "${i18n_MSG_WinsockUpgrade_DA}"
LangString MSG_WinsockUpgrade ${LANG_GERMAN} "${i18n_MSG_WinsockUpgrade_DE}"
LangString MSG_WinsockUpgrade ${LANG_SPANISH} "${i18n_MSG_WinsockUpgrade_ES}"
LangString MSG_WinsockUpgrade ${LANG_FRENCH} "${i18n_MSG_WinsockUpgrade_FR}"
LangString MSG_WinsockUpgrade ${LANG_JAPANESE} "${i18n_MSG_WinsockUpgrade_JA}"
LangString MSG_WinsockUpgrade ${LANG_KOREAN} "${i18n_MSG_WinsockUpgrade_KO}"
LangString MSG_WinsockUpgrade ${LANG_LITHUANIAN} "${i18n_MSG_WinsockUpgrade_LT}"
LangString MSG_WinsockUpgrade ${LANG_DUTCH} "${i18n_MSG_WinsockUpgrade_NL}"
LangString MSG_WinsockUpgrade ${LANG_NORWEGIAN} "${i18n_MSG_WinsockUpgrade_NO}"
LangString MSG_WinsockUpgrade ${LANG_POLISH} "${i18n_MSG_WinsockUpgrade_PL}"
LangString MSG_WinsockUpgrade ${LANG_PORTUGUESEBR} "${i18n_MSG_WinsockUpgrade_PT_BR}"
LangString MSG_WinsockUpgrade ${LANG_PORTUGUESE} "${i18n_MSG_WinsockUpgrade_PT_PT}"
LangString MSG_WinsockUpgrade ${LANG_RUSSIAN} "${i18n_MSG_WinsockUpgrade_RU}"
LangString MSG_WinsockUpgrade ${LANG_SLOVENIAN} "${i18n_MSG_WinsockUpgrade_SL}"
LangString MSG_WinsockUpgrade ${LANG_TRADCHINESE} "${i18n_MSG_WinsockUpgrade_ZH}"

; Winsock2 abort message (MSG_WinsockAbort)
LangString MSG_WinsockAbort ${LANG_ENGLISH} "${i18n_MSG_WinsockAbort_EN}"
LangString MSG_WinsockAbort ${LANG_CATALAN} "${i18n_MSG_WinsockAbort_CA}"
LangString MSG_WinsockAbort ${LANG_CZECH} "${i18n_MSG_WinsockAbort_CZ}"
LangString MSG_WinsockAbort ${LANG_DANISH} "${i18n_MSG_WinsockAbort_DA}"
LangString MSG_WinsockAbort ${LANG_GERMAN} "${i18n_MSG_WinsockAbort_DE}"
LangString MSG_WinsockAbort ${LANG_SPANISH} "${i18n_MSG_WinsockAbort_ES}"
LangString MSG_WinsockAbort ${LANG_FRENCH} "${i18n_MSG_WinsockAbort_FR}"
LangString MSG_WinsockAbort ${LANG_JAPANESE} "${i18n_MSG_WinsockAbort_JA}"
LangString MSG_WinsockAbort ${LANG_KOREAN} "${i18n_MSG_WinsockAbort_KO}"
LangString MSG_WinsockAbort ${LANG_LITHUANIAN} "${i18n_MSG_WinsockAbort_LT}"
LangString MSG_WinsockAbort ${LANG_DUTCH} "${i18n_MSG_WinsockAbort_NL}"
LangString MSG_WinsockAbort ${LANG_NORWEGIAN} "${i18n_MSG_WinsockAbort_NO}"
LangString MSG_WinsockAbort ${LANG_POLISH} "${i18n_MSG_WinsockAbort_PL}"
LangString MSG_WinsockAbort ${LANG_PORTUGUESEBR} "${i18n_MSG_WinsockAbort_PT_BR}"
LangString MSG_WinsockAbort ${LANG_PORTUGUESE} "${i18n_MSG_WinsockAbort_PT_PT}"
LangString MSG_WinsockAbort ${LANG_RUSSIAN} "${i18n_MSG_WinsockAbort_RU}"
LangString MSG_WinsockAbort ${LANG_SLOVENIAN} "${i18n_MSG_WinsockAbort_SL}"
LangString MSG_WinsockAbort ${LANG_TRADCHINESE} "${i18n_MSG_WinsockAbort_ZH}"

; Winsock2 upgrade OK message (MSG_WinsockOK)
LangString MSG_WinsockOK ${LANG_ENGLISH} "${i18n_MSG_WinsockOK_EN}"
LangString MSG_WinsockOK ${LANG_CATALAN} "${i18n_MSG_WinsockOK_CA}"
LangString MSG_WinsockOK ${LANG_CZECH} "${i18n_MSG_WinsockOK_CZ}"
LangString MSG_WinsockOK ${LANG_DANISH} "${i18n_MSG_WinsockOK_DA}"
LangString MSG_WinsockOK ${LANG_GERMAN} "${i18n_MSG_WinsockOK_DE}"
LangString MSG_WinsockOK ${LANG_SPANISH} "${i18n_MSG_WinsockOK_ES}"
LangString MSG_WinsockOK ${LANG_FRENCH} "${i18n_MSG_WinsockOK_FR}"
LangString MSG_WinsockOK ${LANG_JAPANESE} "${i18n_MSG_WinsockOK_JA}"
LangString MSG_WinsockOK ${LANG_KOREAN} "${i18n_MSG_WinsockOK_KO}"
LangString MSG_WinsockOK ${LANG_LITHUANIAN} "${i18n_MSG_WinsockOK_LT}"
LangString MSG_WinsockOK ${LANG_DUTCH} "${i18n_MSG_WinsockOK_NL}"
LangString MSG_WinsockOK ${LANG_NORWEGIAN} "${i18n_MSG_WinsockOK_NO}"
LangString MSG_WinsockOK ${LANG_POLISH} "${i18n_MSG_WinsockOK_PL}"
LangString MSG_WinsockOK ${LANG_PORTUGUESEBR} "${i18n_MSG_WinsockOK_PT_BR}"
LangString MSG_WinsockOK ${LANG_PORTUGUESE} "${i18n_MSG_WinsockOK_PT_PT}"
LangString MSG_WinsockOK ${LANG_RUSSIAN} "${i18n_MSG_WinsockOK_RU}"
LangString MSG_WinsockOK ${LANG_SLOVENIAN} "${i18n_MSG_WinsockOK_SL}"
LangString MSG_WinsockOK ${LANG_TRADCHINESE} "${i18n_MSG_WinsockOK_ZH}"

; SSL abort message (MSG_SSLAbort)
LangString MSG_SSLAbort ${LANG_ENGLISH} "${i18n_MSG_SSLAbort_EN}"
LangString MSG_SSLAbort ${LANG_CATALAN} "${i18n_MSG_SSLAbort_CA}"
LangString MSG_SSLAbort ${LANG_CZECH} "${i18n_MSG_SSLAbort_CZ}"
LangString MSG_SSLAbort ${LANG_DANISH} "${i18n_MSG_SSLAbort_DA}"
LangString MSG_SSLAbort ${LANG_GERMAN} "${i18n_MSG_SSLAbort_DE}"
LangString MSG_SSLAbort ${LANG_SPANISH} "${i18n_MSG_SSLAbort_ES}"
LangString MSG_SSLAbort ${LANG_FRENCH} "${i18n_MSG_SSLAbort_FR}"
LangString MSG_SSLAbort ${LANG_JAPANESE} "${i18n_MSG_SSLAbort_JA}"
LangString MSG_SSLAbort ${LANG_KOREAN} "${i18n_MSG_SSLAbort_KO}"
LangString MSG_SSLAbort ${LANG_LITHUANIAN} "${i18n_MSG_SSLAbort_LT}"
LangString MSG_SSLAbort ${LANG_DUTCH} "${i18n_MSG_SSLAbort_NL}"
LangString MSG_SSLAbort ${LANG_NORWEGIAN} "${i18n_MSG_SSLAbort_NO}"
LangString MSG_SSLAbort ${LANG_POLISH} "${i18n_MSG_SSLAbort_PL}"
LangString MSG_SSLAbort ${LANG_PORTUGUESEBR} "${i18n_MSG_SSLAbort_PT_BR}"
LangString MSG_SSLAbort ${LANG_PORTUGUESE} "${i18n_MSG_SSLAbort_PT_PT}"
LangString MSG_SSLAbort ${LANG_RUSSIAN} "${i18n_MSG_SSLAbort_RU}"
LangString MSG_SSLAbort ${LANG_SLOVENIAN} "${i18n_MSG_SSLAbort_SL}"
LangString MSG_SSLAbort ${LANG_TRADCHINESE} "${i18n_MSG_SSLAbort_ZH}"

; SSL OK message (MSG_SSLOK)
LangString MSG_SSLOK ${LANG_ENGLISH} "${i18n_MSG_SSLOK_EN}"
LangString MSG_SSLOK ${LANG_CATALAN} "${i18n_MSG_SSLOK_CA}"
LangString MSG_SSLOK ${LANG_CZECH} "${i18n_MSG_SSLOK_CZ}"
LangString MSG_SSLOK ${LANG_DANISH} "${i18n_MSG_SSLOK_DA}"
LangString MSG_SSLOK ${LANG_GERMAN} "${i18n_MSG_SSLOK_DE}"
LangString MSG_SSLOK ${LANG_SPANISH} "${i18n_MSG_SSLOK_ES}"
LangString MSG_SSLOK ${LANG_FRENCH} "${i18n_MSG_SSLOK_FR}"
LangString MSG_SSLOK ${LANG_JAPANESE} "${i18n_MSG_SSLOK_JA}"
LangString MSG_SSLOK ${LANG_KOREAN} "${i18n_MSG_SSLOK_KO}"
LangString MSG_SSLOK ${LANG_LITHUANIAN} "${i18n_MSG_SSLOK_LT}"
LangString MSG_SSLOK ${LANG_DUTCH} "${i18n_MSG_SSLOK_NL}"
LangString MSG_SSLOK ${LANG_NORWEGIAN} "${i18n_MSG_SSLOK_NO}"
LangString MSG_SSLOK ${LANG_POLISH} "${i18n_MSG_SSLOK_PL}"
LangString MSG_SSLOK ${LANG_PORTUGUESEBR} "${i18n_MSG_SSLOK_PT_BR}"
LangString MSG_SSLOK ${LANG_PORTUGUESE} "${i18n_MSG_SSLOK_PT_PT}"
LangString MSG_SSLOK ${LANG_RUSSIAN} "${i18n_MSG_SSLOK_RU}"
LangString MSG_SSLOK ${LANG_SLOVENIAN} "${i18n_MSG_SSLOK_SL}"
LangString MSG_SSLOK ${LANG_TRADCHINESE} "${i18n_MSG_SSLOK_ZH}"

; Install type description (DESC_InstTypeFull)
LangString DESC_InstTypeFull ${LANG_ENGLISH} "${i18n_DESC_InstTypeFull_EN}"
LangString DESC_InstTypeFull ${LANG_CATALAN} "${i18n_DESC_InstTypeFull_CA}"
LangString DESC_InstTypeFull ${LANG_CZECH} "${i18n_DESC_InstTypeFull_CZ}"
LangString DESC_InstTypeFull ${LANG_DANISH} "${i18n_DESC_InstTypeFull_DA}"
LangString DESC_InstTypeFull ${LANG_GERMAN} "${i18n_DESC_InstTypeFull_DE}"
LangString DESC_InstTypeFull ${LANG_SPANISH} "${i18n_DESC_InstTypeFull_ES}"
LangString DESC_InstTypeFull ${LANG_FRENCH} "${i18n_DESC_InstTypeFull_FR}"
LangString DESC_InstTypeFull ${LANG_JAPANESE} "${i18n_DESC_InstTypeFull_JA}"
LangString DESC_InstTypeFull ${LANG_KOREAN} "${i18n_DESC_InstTypeFull_KO}"
LangString DESC_InstTypeFull ${LANG_LITHUANIAN} "${i18n_DESC_InstTypeFull_LT}"
LangString DESC_InstTypeFull ${LANG_DUTCH} "${i18n_DESC_InstTypeFull_NL}"
LangString DESC_InstTypeFull ${LANG_NORWEGIAN} "${i18n_DESC_InstTypeFull_NO}"
LangString DESC_InstTypeFull ${LANG_POLISH} "${i18n_DESC_InstTypeFull_PL}"
LangString DESC_InstTypeFull ${LANG_PORTUGUESEBR} "${i18n_DESC_InstTypeFull_PT_BR}"
LangString DESC_InstTypeFull ${LANG_PORTUGUESE} "${i18n_DESC_InstTypeFull_PT_PT}"
LangString DESC_InstTypeFull ${LANG_RUSSIAN} "${i18n_DESC_InstTypeFull_RU}"
LangString DESC_InstTypeFull ${LANG_SLOVENIAN} "${i18n_DESC_InstTypeFull_SL}"
LangString DESC_InstTypeFull ${LANG_TRADCHINESE} "${i18n_DESC_InstTypeFull_ZH}"

; Install type description (DESC_InstTypeBare)
LangString DESC_InstTypeBare ${LANG_ENGLISH} "${i18n_DESC_InstTypeBare_EN}"
LangString DESC_InstTypeBare ${LANG_CATALAN} "${i18n_DESC_InstTypeBare_CA}"
LangString DESC_InstTypeBare ${LANG_CZECH} "${i18n_DESC_InstTypeBare_CZ}"
LangString DESC_InstTypeBare ${LANG_DANISH} "${i18n_DESC_InstTypeBare_DA}"
LangString DESC_InstTypeBare ${LANG_GERMAN} "${i18n_DESC_InstTypeBare_DE}"
LangString DESC_InstTypeBare ${LANG_SPANISH} "${i18n_DESC_InstTypeBare_ES}"
LangString DESC_InstTypeBare ${LANG_FRENCH} "${i18n_DESC_InstTypeBare_FR}"
LangString DESC_InstTypeBare ${LANG_JAPANESE} "${i18n_DESC_InstTypeBare_JA}"
LangString DESC_InstTypeBare ${LANG_KOREAN} "${i18n_DESC_InstTypeBare_KO}"
LangString DESC_InstTypeBare ${LANG_LITHUANIAN} "${i18n_DESC_InstTypeBare_LT}"
LangString DESC_InstTypeBare ${LANG_DUTCH} "${i18n_DESC_InstTypeBare_NL}"
LangString DESC_InstTypeBare ${LANG_NORWEGIAN} "${i18n_DESC_InstTypeBare_NO}"
LangString DESC_InstTypeBare ${LANG_POLISH} "${i18n_DESC_InstTypeBare_PL}"
LangString DESC_InstTypeBare ${LANG_PORTUGUESEBR} "${i18n_DESC_InstTypeBare_PT_BR}"
LangString DESC_InstTypeBare ${LANG_PORTUGUESE} "${i18n_DESC_InstTypeBare_PT_PT}"
LangString DESC_InstTypeBare ${LANG_RUSSIAN} "${i18n_DESC_InstTypeBare_RU}"
LangString DESC_InstTypeBare ${LANG_SLOVENIAN} "${i18n_DESC_InstTypeBare_SL}"
LangString DESC_InstTypeBare ${LANG_TRADCHINESE} "${i18n_DESC_InstTypeBare_ZH}"

; Install type description (DESC_InstTypeI18n)
LangString DESC_InstTypeI18n ${LANG_ENGLISH} "${i18n_DESC_InstTypeI18n_EN}"
LangString DESC_InstTypeI18n ${LANG_CATALAN} "${i18n_DESC_InstTypeI18n_CA}"
LangString DESC_InstTypeI18n ${LANG_CZECH} "${i18n_DESC_InstTypeI18n_CZ}"
LangString DESC_InstTypeI18n ${LANG_DANISH} "${i18n_DESC_InstTypeI18n_DA}"
LangString DESC_InstTypeI18n ${LANG_GERMAN} "${i18n_DESC_InstTypeI18n_DE}"
LangString DESC_InstTypeI18n ${LANG_SPANISH} "${i18n_DESC_InstTypeI18n_ES}"
LangString DESC_InstTypeI18n ${LANG_FRENCH} "${i18n_DESC_InstTypeI18n_FR}"
LangString DESC_InstTypeI18n ${LANG_JAPANESE} "${i18n_DESC_InstTypeI18n_JA}"
LangString DESC_InstTypeI18n ${LANG_KOREAN} "${i18n_DESC_InstTypeI18n_KO}"
LangString DESC_InstTypeI18n ${LANG_LITHUANIAN} "${i18n_DESC_InstTypeI18n_LT}"
LangString DESC_InstTypeI18n ${LANG_DUTCH} "${i18n_DESC_InstTypeI18n_NL}"
LangString DESC_InstTypeI18n ${LANG_NORWEGIAN} "${i18n_DESC_InstTypeI18n_NO}"
LangString DESC_InstTypeI18n ${LANG_POLISH} "${i18n_DESC_InstTypeI18n_PL}"
LangString DESC_InstTypeI18n ${LANG_PORTUGUESEBR} "${i18n_DESC_InstTypeI18n_PT_BR}"
LangString DESC_InstTypeI18n ${LANG_PORTUGUESE} "${i18n_DESC_InstTypeI18n_PT_PT}"
LangString DESC_InstTypeI18n ${LANG_RUSSIAN} "${i18n_DESC_InstTypeI18n_RU}"
LangString DESC_InstTypeI18n ${LANG_SLOVENIAN} "${i18n_DESC_InstTypeI18n_SL}"
LangString DESC_InstTypeI18n ${LANG_TRADCHINESE} "${i18n_DESC_InstTypeI18n_ZH}"

; Install type description (DESC_InstTypeSSL)
LangString DESC_InstTypeSSL ${LANG_ENGLISH} "${i18n_DESC_InstTypeSSL_EN}"
LangString DESC_InstTypeSSL ${LANG_CATALAN} "${i18n_DESC_InstTypeSSL_CA}"
LangString DESC_InstTypeSSL ${LANG_CZECH} "${i18n_DESC_InstTypeSSL_CZ}"
LangString DESC_InstTypeSSL ${LANG_DANISH} "${i18n_DESC_InstTypeSSL_DA}"
LangString DESC_InstTypeSSL ${LANG_GERMAN} "${i18n_DESC_InstTypeSSL_DE}"
LangString DESC_InstTypeSSL ${LANG_SPANISH} "${i18n_DESC_InstTypeSSL_ES}"
LangString DESC_InstTypeSSL ${LANG_FRENCH} "${i18n_DESC_InstTypeSSL_FR}"
LangString DESC_InstTypeSSL ${LANG_JAPANESE} "${i18n_DESC_InstTypeSSL_JA}"
LangString DESC_InstTypeSSL ${LANG_KOREAN} "${i18n_DESC_InstTypeSSL_KO}"
LangString DESC_InstTypeSSL ${LANG_LITHUANIAN} "${i18n_DESC_InstTypeSSL_LT}"
LangString DESC_InstTypeSSL ${LANG_DUTCH} "${i18n_DESC_InstTypeSSL_NL}"
LangString DESC_InstTypeSSL ${LANG_NORWEGIAN} "${i18n_DESC_InstTypeSSL_NO}"
LangString DESC_InstTypeSSL ${LANG_POLISH} "${i18n_DESC_InstTypeSSL_PL}"
LangString DESC_InstTypeSSL ${LANG_PORTUGUESEBR} "${i18n_DESC_InstTypeSSL_PT_BR}"
LangString DESC_InstTypeSSL ${LANG_PORTUGUESE} "${i18n_DESC_InstTypeSSL_PT_PT}"
LangString DESC_InstTypeSSL ${LANG_RUSSIAN} "${i18n_DESC_InstTypeSSL_RU}"
LangString DESC_InstTypeSSL ${LANG_SLOVENIAN} "${i18n_DESC_InstTypeSSL_SL}"
LangString DESC_InstTypeSSL ${LANG_TRADCHINESE} "${i18n_DESC_InstTypeSSL_ZH}"

; Install type description (DESC_InstTypeBleed)
LangString DESC_InstTypeBleed ${LANG_ENGLISH} "${i18n_DESC_InstTypeBleed_EN}"
LangString DESC_InstTypeBleed ${LANG_CATALAN} "${i18n_DESC_InstTypeBleed_CA}"
LangString DESC_InstTypeBleed ${LANG_CZECH} "${i18n_DESC_InstTypeBleed_CZ}"
LangString DESC_InstTypeBleed ${LANG_DANISH} "${i18n_DESC_InstTypeBleed_DA}"
LangString DESC_InstTypeBleed ${LANG_GERMAN} "${i18n_DESC_InstTypeBleed_DE}"
LangString DESC_InstTypeBleed ${LANG_SPANISH} "${i18n_DESC_InstTypeBleed_ES}"
LangString DESC_InstTypeBleed ${LANG_FRENCH} "${i18n_DESC_InstTypeBleed_FR}"
LangString DESC_InstTypeBleed ${LANG_JAPANESE} "${i18n_DESC_InstTypeBleed_JA}"
LangString DESC_InstTypeBleed ${LANG_KOREAN} "${i18n_DESC_InstTypeBleed_KO}"
LangString DESC_InstTypeBleed ${LANG_LITHUANIAN} "${i18n_DESC_InstTypeBleed_LT}"
LangString DESC_InstTypeBleed ${LANG_DUTCH} "${i18n_DESC_InstTypeBleed_NL}"
LangString DESC_InstTypeBleed ${LANG_NORWEGIAN} "${i18n_DESC_InstTypeBleed_NO}"
LangString DESC_InstTypeBleed ${LANG_POLISH} "${i18n_DESC_InstTypeBleed_PL}"
LangString DESC_InstTypeBleed ${LANG_PORTUGUESEBR} "${i18n_DESC_InstTypeBleed_PT_BR}"
LangString DESC_InstTypeBleed ${LANG_PORTUGUESE} "${i18n_DESC_InstTypeBleed_PT_PT}"
LangString DESC_InstTypeBleed ${LANG_RUSSIAN} "${i18n_DESC_InstTypeBleed_RU}"
LangString DESC_InstTypeBleed ${LANG_SLOVENIAN} "${i18n_DESC_InstTypeBleed_SL}"
LangString DESC_InstTypeBleed ${LANG_TRADCHINESE} "${i18n_DESC_InstTypeBleed_ZH}"

; Close running Exodus message (MSG_NotifyInstances)
LangString MSG_NotifyInstances ${LANG_ENGLISH} "${i18n_MSG_NotifyInstances_EN}"
LangString MSG_NotifyInstances ${LANG_CATALAN} "${i18n_MSG_NotifyInstances_CA}"
LangString MSG_NotifyInstances ${LANG_CZECH} "${i18n_MSG_NotifyInstances_CZ}"
LangString MSG_NotifyInstances ${LANG_DANISH} "${i18n_MSG_NotifyInstances_DA}"
LangString MSG_NotifyInstances ${LANG_GERMAN} "${i18n_MSG_NotifyInstances_DE}"
LangString MSG_NotifyInstances ${LANG_SPANISH} "${i18n_MSG_NotifyInstances_ES}"
LangString MSG_NotifyInstances ${LANG_FRENCH} "${i18n_MSG_NotifyInstances_FR}"
LangString MSG_NotifyInstances ${LANG_JAPANESE} "${i18n_MSG_NotifyInstances_JA}"
LangString MSG_NotifyInstances ${LANG_KOREAN} "${i18n_MSG_NotifyInstances_KO}"
LangString MSG_NotifyInstances ${LANG_LITHUANIAN} "${i18n_MSG_NotifyInstances_LT}"
LangString MSG_NotifyInstances ${LANG_DUTCH} "${i18n_MSG_NotifyInstances_NL}"
LangString MSG_NotifyInstances ${LANG_NORWEGIAN} "${i18n_MSG_NotifyInstances_NO}"
LangString MSG_NotifyInstances ${LANG_POLISH} "${i18n_MSG_NotifyInstances_PL}"
LangString MSG_NotifyInstances ${LANG_PORTUGUESEBR} "${i18n_MSG_NotifyInstances_PT_BR}"
LangString MSG_NotifyInstances ${LANG_PORTUGUESE} "${i18n_MSG_NotifyInstances_PT_PT}"
LangString MSG_NotifyInstances ${LANG_RUSSIAN} "${i18n_MSG_NotifyInstances_RU}"
LangString MSG_NotifyInstances ${LANG_SLOVENIAN} "${i18n_MSG_NotifyInstances_SL}"
LangString MSG_NotifyInstances ${LANG_TRADCHINESE} "${i18n_MSG_NotifyInstances_ZH}"

; hildjj: moved here so it doesn't have to be generated
; Plugin upgrade abort message (MSG_PluginAbort)
LangString MSG_PluginAbort ${LANG_ENGLISH} "${i18n_MSG_PluginAbort_EN}"
LangString MSG_PluginAbort ${LANG_CATALAN} "${i18n_MSG_PluginAbort_CA}"
LangString MSG_PluginAbort ${LANG_CZECH} "${i18n_MSG_PluginAbort_CZ}"
LangString MSG_PluginAbort ${LANG_DANISH} "${i18n_MSG_PluginAbort_DA}"
LangString MSG_PluginAbort ${LANG_GERMAN} "${i18n_MSG_PluginAbort_DE}"
LangString MSG_PluginAbort ${LANG_SPANISH} "${i18n_MSG_PluginAbort_ES}"
LangString MSG_PluginAbort ${LANG_FRENCH} "${i18n_MSG_PluginAbort_FR}"
LangString MSG_PluginAbort ${LANG_JAPANESE} "${i18n_MSG_PluginAbort_JA}"
LangString MSG_PluginAbort ${LANG_KOREAN} "${i18n_MSG_PluginAbort_KO}"
LangString MSG_PluginAbort ${LANG_LITHUANIAN} "${i18n_MSG_PluginAbort_LT}"
LangString MSG_PluginAbort ${LANG_DUTCH} "${i18n_MSG_PluginAbort_NL}"
LangString MSG_PluginAbort ${LANG_NORWEGIAN} "${i18n_MSG_PluginAbort_NO}"
LangString MSG_PluginAbort ${LANG_POLISH} "${i18n_MSG_PluginAbort_PL}"
LangString MSG_PluginAbort ${LANG_PORTUGUESEBR} "${i18n_MSG_PluginAbort_PT_BR}"
LangString MSG_PluginAbort ${LANG_PORTUGUESE} "${i18n_MSG_PluginAbort_PT_PT}"
LangString MSG_PluginAbort ${LANG_RUSSIAN} "${i18n_MSG_PluginAbort_RU}"
LangString MSG_PluginAbort ${LANG_SLOVENIAN} "${i18n_MSG_PluginAbort_SL}"
LangString MSG_PluginAbort ${LANG_TRADCHINESE} "${i18n_MSG_PluginAbort_ZH}"

; Shortcut creation window caption (CUSTOMSHELL_TITLE)
LangString CUSTOMSHELL_TITLE ${LANG_ENGLISH} "${i18n_CUSTOMSHELL_TITLE_EN}"
LangString CUSTOMSHELL_TITLE ${LANG_CATALAN} "${i18n_CUSTOMSHELL_TITLE_CA}"
LangString CUSTOMSHELL_TITLE ${LANG_CZECH} "${i18n_CUSTOMSHELL_TITLE_CZ}"
LangString CUSTOMSHELL_TITLE ${LANG_DANISH} "${i18n_CUSTOMSHELL_TITLE_DA}"
LangString CUSTOMSHELL_TITLE ${LANG_GERMAN} "${i18n_CUSTOMSHELL_TITLE_DE}"
LangString CUSTOMSHELL_TITLE ${LANG_SPANISH} "${i18n_CUSTOMSHELL_TITLE_ES}"
LangString CUSTOMSHELL_TITLE ${LANG_FRENCH} "${i18n_CUSTOMSHELL_TITLE_FR}"
LangString CUSTOMSHELL_TITLE ${LANG_JAPANESE} "${i18n_CUSTOMSHELL_TITLE_JA}"
LangString CUSTOMSHELL_TITLE ${LANG_KOREAN} "${i18n_CUSTOMSHELL_TITLE_KO}"
LangString CUSTOMSHELL_TITLE ${LANG_LITHUANIAN} "${i18n_CUSTOMSHELL_TITLE_LT}"
LangString CUSTOMSHELL_TITLE ${LANG_DUTCH} "${i18n_CUSTOMSHELL_TITLE_NL}"
LangString CUSTOMSHELL_TITLE ${LANG_NORWEGIAN} "${i18n_CUSTOMSHELL_TITLE_NO}"
LangString CUSTOMSHELL_TITLE ${LANG_POLISH} "${i18n_CUSTOMSHELL_TITLE_PL}"
LangString CUSTOMSHELL_TITLE ${LANG_PORTUGUESEBR} "${i18n_CUSTOMSHELL_TITLE_PT_BR}"
LangString CUSTOMSHELL_TITLE ${LANG_PORTUGUESE} "${i18n_CUSTOMSHELL_TITLE_PT_PT}"
LangString CUSTOMSHELL_TITLE ${LANG_RUSSIAN} "${i18n_CUSTOMSHELL_TITLE_RU}"
LangString CUSTOMSHELL_TITLE ${LANG_SLOVENIAN} "${i18n_CUSTOMSHELL_TITLE_SL}"
LangString CUSTOMSHELL_TITLE ${LANG_TRADCHINESE} "${i18n_CUSTOMSHELL_TITLE_ZH}"

; Shortcut creation window subcaption (CUSTOMSHELL_SUBTITLE)
LangString CUSTOMSHELL_SUBTITLE ${LANG_ENGLISH} "${i18n_CUSTOMSHELL_SUBTITLE_EN}"
LangString CUSTOMSHELL_SUBTITLE ${LANG_CATALAN} "${i18n_CUSTOMSHELL_SUBTITLE_CA}"
LangString CUSTOMSHELL_SUBTITLE ${LANG_CZECH} "${i18n_CUSTOMSHELL_SUBTITLE_CZ}"
LangString CUSTOMSHELL_SUBTITLE ${LANG_DANISH} "${i18n_CUSTOMSHELL_SUBTITLE_DA}"
LangString CUSTOMSHELL_SUBTITLE ${LANG_GERMAN} "${i18n_CUSTOMSHELL_SUBTITLE_DE}"
LangString CUSTOMSHELL_SUBTITLE ${LANG_SPANISH} "${i18n_CUSTOMSHELL_SUBTITLE_ES}"
LangString CUSTOMSHELL_SUBTITLE ${LANG_FRENCH} "${i18n_CUSTOMSHELL_SUBTITLE_FR}"
LangString CUSTOMSHELL_SUBTITLE ${LANG_JAPANESE} "${i18n_CUSTOMSHELL_SUBTITLE_JA}"
LangString CUSTOMSHELL_SUBTITLE ${LANG_KOREAN} "${i18n_CUSTOMSHELL_SUBTITLE_KO}"
LangString CUSTOMSHELL_SUBTITLE ${LANG_LITHUANIAN} "${i18n_CUSTOMSHELL_SUBTITLE_LT}"
LangString CUSTOMSHELL_SUBTITLE ${LANG_DUTCH} "${i18n_CUSTOMSHELL_SUBTITLE_NL}"
LangString CUSTOMSHELL_SUBTITLE ${LANG_NORWEGIAN} "${i18n_CUSTOMSHELL_SUBTITLE_NO}"
LangString CUSTOMSHELL_SUBTITLE ${LANG_POLISH} "${i18n_CUSTOMSHELL_SUBTITLE_PL}"
LangString CUSTOMSHELL_SUBTITLE ${LANG_PORTUGUESEBR} "${i18n_CUSTOMSHELL_SUBTITLE_PT_BR}"
LangString CUSTOMSHELL_SUBTITLE ${LANG_PORTUGUESE} "${i18n_CUSTOMSHELL_SUBTITLE_PT_PT}"
LangString CUSTOMSHELL_SUBTITLE ${LANG_RUSSIAN} "${i18n_CUSTOMSHELL_SUBTITLE_RU}"
LangString CUSTOMSHELL_SUBTITLE ${LANG_SLOVENIAN} "${i18n_CUSTOMSHELL_SUBTITLE_SL}"
LangString CUSTOMSHELL_SUBTITLE ${LANG_TRADCHINESE} "${i18n_CUSTOMSHELL_SUBTITLE_ZH}"

; CustomShell Field1 description (DESC_CustomShellField1)
LangString DESC_CustomShellField1 ${LANG_ENGLISH} "${i18n_DESC_CustomShellField1_EN}"
LangString DESC_CustomShellField1 ${LANG_CATALAN} "${i18n_DESC_CustomShellField1_CA}"
LangString DESC_CustomShellField1 ${LANG_CZECH} "${i18n_DESC_CustomShellField1_CZ}"
LangString DESC_CustomShellField1 ${LANG_DANISH} "${i18n_DESC_CustomShellField1_DA}"
LangString DESC_CustomShellField1 ${LANG_GERMAN} "${i18n_DESC_CustomShellField1_DE}"
LangString DESC_CustomShellField1 ${LANG_SPANISH} "${i18n_DESC_CustomShellField1_ES}"
LangString DESC_CustomShellField1 ${LANG_FRENCH} "${i18n_DESC_CustomShellField1_FR}"
LangString DESC_CustomShellField1 ${LANG_JAPANESE} "${i18n_DESC_CustomShellField1_JA}"
LangString DESC_CustomShellField1 ${LANG_KOREAN} "${i18n_DESC_CustomShellField1_KO}"
LangString DESC_CustomShellField1 ${LANG_LITHUANIAN} "${i18n_DESC_CustomShellField1_LT}"
LangString DESC_CustomShellField1 ${LANG_DUTCH} "${i18n_DESC_CustomShellField1_NL}"
LangString DESC_CustomShellField1 ${LANG_NORWEGIAN} "${i18n_DESC_CustomShellField1_NO}"
LangString DESC_CustomShellField1 ${LANG_POLISH} "${i18n_DESC_CustomShellField1_PL}"
LangString DESC_CustomShellField1 ${LANG_PORTUGUESEBR} "${i18n_DESC_CustomShellField1_PT_BR}"
LangString DESC_CustomShellField1 ${LANG_PORTUGUESE} "${i18n_DESC_CustomShellField1_PT_PT}"
LangString DESC_CustomShellField1 ${LANG_RUSSIAN} "${i18n_DESC_CustomShellField1_RU}"
LangString DESC_CustomShellField1 ${LANG_SLOVENIAN} "${i18n_DESC_CustomShellField1_SL}"
LangString DESC_CustomShellField1 ${LANG_TRADCHINESE} "${i18n_DESC_CustomShellField1_ZH}"

; CustomShell Field2 description (DESC_CustomShellField2)
LangString DESC_CustomShellField2 ${LANG_ENGLISH} "${i18n_DESC_CustomShellField2_EN}"
LangString DESC_CustomShellField2 ${LANG_CATALAN} "${i18n_DESC_CustomShellField2_CA}"
LangString DESC_CustomShellField2 ${LANG_CZECH} "${i18n_DESC_CustomShellField2_CZ}"
LangString DESC_CustomShellField2 ${LANG_DANISH} "${i18n_DESC_CustomShellField2_DA}"
LangString DESC_CustomShellField2 ${LANG_GERMAN} "${i18n_DESC_CustomShellField2_DE}"
LangString DESC_CustomShellField2 ${LANG_SPANISH} "${i18n_DESC_CustomShellField2_ES}"
LangString DESC_CustomShellField2 ${LANG_FRENCH} "${i18n_DESC_CustomShellField2_FR}"
LangString DESC_CustomShellField2 ${LANG_JAPANESE} "${i18n_DESC_CustomShellField2_JA}"
LangString DESC_CustomShellField2 ${LANG_KOREAN} "${i18n_DESC_CustomShellField2_KO}"
LangString DESC_CustomShellField2 ${LANG_LITHUANIAN} "${i18n_DESC_CustomShellField2_LT}"
LangString DESC_CustomShellField2 ${LANG_DUTCH} "${i18n_DESC_CustomShellField2_NL}"
LangString DESC_CustomShellField2 ${LANG_NORWEGIAN} "${i18n_DESC_CustomShellField2_NO}"
LangString DESC_CustomShellField2 ${LANG_POLISH} "${i18n_DESC_CustomShellField2_PL}"
LangString DESC_CustomShellField2 ${LANG_PORTUGUESEBR} "${i18n_DESC_CustomShellField2_PT_BR}"
LangString DESC_CustomShellField2 ${LANG_PORTUGUESE} "${i18n_DESC_CustomShellField2_PT_PT}"
LangString DESC_CustomShellField2 ${LANG_RUSSIAN} "${i18n_DESC_CustomShellField2_RU}"
LangString DESC_CustomShellField2 ${LANG_SLOVENIAN} "${i18n_DESC_CustomShellField2_SL}"
LangString DESC_CustomShellField2 ${LANG_TRADCHINESE} "${i18n_DESC_CustomShellField2_ZH}"

; CustomShell Field3 description (DESC_CustomShellField3)
LangString DESC_CustomShellField3 ${LANG_ENGLISH} "${i18n_DESC_CustomShellField3_EN}"
LangString DESC_CustomShellField3 ${LANG_CATALAN} "${i18n_DESC_CustomShellField3_CA}"
LangString DESC_CustomShellField3 ${LANG_CZECH} "${i18n_DESC_CustomShellField3_CZ}"
LangString DESC_CustomShellField3 ${LANG_DANISH} "${i18n_DESC_CustomShellField3_DA}"
LangString DESC_CustomShellField3 ${LANG_GERMAN} "${i18n_DESC_CustomShellField3_DE}"
LangString DESC_CustomShellField3 ${LANG_SPANISH} "${i18n_DESC_CustomShellField3_ES}"
LangString DESC_CustomShellField3 ${LANG_FRENCH} "${i18n_DESC_CustomShellField3_FR}"
LangString DESC_CustomShellField3 ${LANG_JAPANESE} "${i18n_DESC_CustomShellField3_JA}"
LangString DESC_CustomShellField3 ${LANG_KOREAN} "${i18n_DESC_CustomShellField3_KO}"
LangString DESC_CustomShellField3 ${LANG_LITHUANIAN} "${i18n_DESC_CustomShellField3_LT}"
LangString DESC_CustomShellField3 ${LANG_DUTCH} "${i18n_DESC_CustomShellField3_NL}"
LangString DESC_CustomShellField3 ${LANG_NORWEGIAN} "${i18n_DESC_CustomShellField3_NO}"
LangString DESC_CustomShellField3 ${LANG_POLISH} "${i18n_DESC_CustomShellField3_PL}"
LangString DESC_CustomShellField3 ${LANG_PORTUGUESEBR} "${i18n_DESC_CustomShellField3_PT_BR}"
LangString DESC_CustomShellField3 ${LANG_PORTUGUESE} "${i18n_DESC_CustomShellField3_PT_PT}"
LangString DESC_CustomShellField3 ${LANG_RUSSIAN} "${i18n_DESC_CustomShellField3_RU}"
LangString DESC_CustomShellField3 ${LANG_SLOVENIAN} "${i18n_DESC_CustomShellField3_SL}"
LangString DESC_CustomShellField3 ${LANG_TRADCHINESE} "${i18n_DESC_CustomShellField3_ZH}"

; CustomShell Field4 description (DESC_CustomShellField4)
LangString DESC_CustomShellField4 ${LANG_ENGLISH} "${i18n_DESC_CustomShellField4_EN}"
LangString DESC_CustomShellField4 ${LANG_CATALAN} "${i18n_DESC_CustomShellField4_CA}"
LangString DESC_CustomShellField4 ${LANG_CZECH} "${i18n_DESC_CustomShellField4_CZ}"
LangString DESC_CustomShellField4 ${LANG_DANISH} "${i18n_DESC_CustomShellField4_DA}"
LangString DESC_CustomShellField4 ${LANG_GERMAN} "${i18n_DESC_CustomShellField4_DE}"
LangString DESC_CustomShellField4 ${LANG_SPANISH} "${i18n_DESC_CustomShellField4_ES}"
LangString DESC_CustomShellField4 ${LANG_FRENCH} "${i18n_DESC_CustomShellField4_FR}"
LangString DESC_CustomShellField4 ${LANG_JAPANESE} "${i18n_DESC_CustomShellField4_JA}"
LangString DESC_CustomShellField4 ${LANG_KOREAN} "${i18n_DESC_CustomShellField4_KO}"
LangString DESC_CustomShellField4 ${LANG_LITHUANIAN} "${i18n_DESC_CustomShellField4_LT}"
LangString DESC_CustomShellField4 ${LANG_DUTCH} "${i18n_DESC_CustomShellField4_NL}"
LangString DESC_CustomShellField4 ${LANG_NORWEGIAN} "${i18n_DESC_CustomShellField4_NO}"
LangString DESC_CustomShellField4 ${LANG_POLISH} "${i18n_DESC_CustomShellField4_PL}"
LangString DESC_CustomShellField4 ${LANG_PORTUGUESEBR} "${i18n_DESC_CustomShellField4_PT_BR}"
LangString DESC_CustomShellField4 ${LANG_PORTUGUESE} "${i18n_DESC_CustomShellField4_PT_PT}"
LangString DESC_CustomShellField4 ${LANG_RUSSIAN} "${i18n_DESC_CustomShellField4_RU}"
LangString DESC_CustomShellField4 ${LANG_SLOVENIAN} "${i18n_DESC_CustomShellField4_SL}"
LangString DESC_CustomShellField4 ${LANG_TRADCHINESE} "${i18n_DESC_CustomShellField4_ZH}"

; CustomShell Field5 description (DESC_CustomShellField5)
LangString DESC_CustomShellField5 ${LANG_ENGLISH} "${i18n_DESC_CustomShellField5_EN}"
LangString DESC_CustomShellField5 ${LANG_CATALAN} "${i18n_DESC_CustomShellField5_CA}"
LangString DESC_CustomShellField5 ${LANG_CZECH} "${i18n_DESC_CustomShellField5_CZ}"
LangString DESC_CustomShellField5 ${LANG_DANISH} "${i18n_DESC_CustomShellField5_DA}"
LangString DESC_CustomShellField5 ${LANG_GERMAN} "${i18n_DESC_CustomShellField5_DE}"
LangString DESC_CustomShellField5 ${LANG_SPANISH} "${i18n_DESC_CustomShellField5_ES}"
LangString DESC_CustomShellField5 ${LANG_FRENCH} "${i18n_DESC_CustomShellField5_FR}"
LangString DESC_CustomShellField5 ${LANG_JAPANESE} "${i18n_DESC_CustomShellField5_JA}"
LangString DESC_CustomShellField5 ${LANG_KOREAN} "${i18n_DESC_CustomShellField5_KO}"
LangString DESC_CustomShellField5 ${LANG_LITHUANIAN} "${i18n_DESC_CustomShellField5_LT}"
LangString DESC_CustomShellField5 ${LANG_DUTCH} "${i18n_DESC_CustomShellField5_NL}"
LangString DESC_CustomShellField5 ${LANG_NORWEGIAN} "${i18n_DESC_CustomShellField5_NO}"
LangString DESC_CustomShellField5 ${LANG_POLISH} "${i18n_DESC_CustomShellField5_PL}"
LangString DESC_CustomShellField5 ${LANG_PORTUGUESEBR} "${i18n_DESC_CustomShellField5_PT_BR}"
LangString DESC_CustomShellField5 ${LANG_PORTUGUESE} "${i18n_DESC_CustomShellField5_PT_PT}"
LangString DESC_CustomShellField5 ${LANG_RUSSIAN} "${i18n_DESC_CustomShellField5_RU}"
LangString DESC_CustomShellField5 ${LANG_SLOVENIAN} "${i18n_DESC_CustomShellField5_SL}"
LangString DESC_CustomShellField5 ${LANG_TRADCHINESE} "${i18n_DESC_CustomShellField5_ZH}"

; User logs removal window caption (UNCUSTOMSHELL_TITLE)
LangString UNCUSTOMSHELL_TITLE ${LANG_ENGLISH} "${i18n_UNCUSTOMSHELL_TITLE_EN}"
LangString UNCUSTOMSHELL_TITLE ${LANG_CATALAN} "${i18n_UNCUSTOMSHELL_TITLE_CA}"
LangString UNCUSTOMSHELL_TITLE ${LANG_CZECH} "${i18n_UNCUSTOMSHELL_TITLE_CZ}"
LangString UNCUSTOMSHELL_TITLE ${LANG_DANISH} "${i18n_UNCUSTOMSHELL_TITLE_DA}"
LangString UNCUSTOMSHELL_TITLE ${LANG_GERMAN} "${i18n_UNCUSTOMSHELL_TITLE_DE}"
LangString UNCUSTOMSHELL_TITLE ${LANG_SPANISH} "${i18n_UNCUSTOMSHELL_TITLE_ES}"
LangString UNCUSTOMSHELL_TITLE ${LANG_FRENCH} "${i18n_UNCUSTOMSHELL_TITLE_FR}"
LangString UNCUSTOMSHELL_TITLE ${LANG_JAPANESE} "${i18n_UNCUSTOMSHELL_TITLE_JA}"
LangString UNCUSTOMSHELL_TITLE ${LANG_KOREAN} "${i18n_UNCUSTOMSHELL_TITLE_KO}"
LangString UNCUSTOMSHELL_TITLE ${LANG_LITHUANIAN} "${i18n_UNCUSTOMSHELL_TITLE_LT}"
LangString UNCUSTOMSHELL_TITLE ${LANG_DUTCH} "${i18n_UNCUSTOMSHELL_TITLE_NL}"
LangString UNCUSTOMSHELL_TITLE ${LANG_NORWEGIAN} "${i18n_UNCUSTOMSHELL_TITLE_NO}"
LangString UNCUSTOMSHELL_TITLE ${LANG_POLISH} "${i18n_UNCUSTOMSHELL_TITLE_PL}"
LangString UNCUSTOMSHELL_TITLE ${LANG_PORTUGUESEBR} "${i18n_UNCUSTOMSHELL_TITLE_PT_BR}"
LangString UNCUSTOMSHELL_TITLE ${LANG_PORTUGUESE} "${i18n_UNCUSTOMSHELL_TITLE_PT_PT}"
LangString UNCUSTOMSHELL_TITLE ${LANG_RUSSIAN} "${i18n_UNCUSTOMSHELL_TITLE_RU}"
LangString UNCUSTOMSHELL_TITLE ${LANG_SLOVENIAN} "${i18n_UNCUSTOMSHELL_TITLE_SL}"
LangString UNCUSTOMSHELL_TITLE ${LANG_TRADCHINESE} "${i18n_UNCUSTOMSHELL_TITLE_ZH}"

; User logs removal window subcaption (UNCUSTOMSHELL_SUBTITLE)
LangString UNCUSTOMSHELL_SUBTITLE ${LANG_ENGLISH} "${i18n_UNCUSTOMSHELL_SUBTITLE_EN}"
LangString UNCUSTOMSHELL_SUBTITLE ${LANG_CATALAN} "${i18n_UNCUSTOMSHELL_SUBTITLE_CA}"
LangString UNCUSTOMSHELL_SUBTITLE ${LANG_CZECH} "${i18n_UNCUSTOMSHELL_SUBTITLE_CZ}"
LangString UNCUSTOMSHELL_SUBTITLE ${LANG_DANISH} "${i18n_UNCUSTOMSHELL_SUBTITLE_DA}"
LangString UNCUSTOMSHELL_SUBTITLE ${LANG_GERMAN} "${i18n_UNCUSTOMSHELL_SUBTITLE_DE}"
LangString UNCUSTOMSHELL_SUBTITLE ${LANG_SPANISH} "${i18n_UNCUSTOMSHELL_SUBTITLE_ES}"
LangString UNCUSTOMSHELL_SUBTITLE ${LANG_FRENCH} "${i18n_UNCUSTOMSHELL_SUBTITLE_FR}"
LangString UNCUSTOMSHELL_SUBTITLE ${LANG_JAPANESE} "${i18n_UNCUSTOMSHELL_SUBTITLE_JA}"
LangString UNCUSTOMSHELL_SUBTITLE ${LANG_KOREAN} "${i18n_UNCUSTOMSHELL_SUBTITLE_KO}"
LangString UNCUSTOMSHELL_SUBTITLE ${LANG_LITHUANIAN} "${i18n_UNCUSTOMSHELL_SUBTITLE_LT}"
LangString UNCUSTOMSHELL_SUBTITLE ${LANG_DUTCH} "${i18n_UNCUSTOMSHELL_SUBTITLE_NL}"
LangString UNCUSTOMSHELL_SUBTITLE ${LANG_NORWEGIAN} "${i18n_UNCUSTOMSHELL_SUBTITLE_NO}"
LangString UNCUSTOMSHELL_SUBTITLE ${LANG_POLISH} "${i18n_UNCUSTOMSHELL_SUBTITLE_PL}"
LangString UNCUSTOMSHELL_SUBTITLE ${LANG_PORTUGUESEBR} "${i18n_UNCUSTOMSHELL_SUBTITLE_PT_BR}"
LangString UNCUSTOMSHELL_SUBTITLE ${LANG_PORTUGUESE} "${i18n_UNCUSTOMSHELL_SUBTITLE_PT_PT}"
LangString UNCUSTOMSHELL_SUBTITLE ${LANG_RUSSIAN} "${i18n_UNCUSTOMSHELL_SUBTITLE_RU}"
LangString UNCUSTOMSHELL_SUBTITLE ${LANG_SLOVENIAN} "${i18n_UNCUSTOMSHELL_SUBTITLE_SL}"
LangString UNCUSTOMSHELL_SUBTITLE ${LANG_TRADCHINESE} "${i18n_UNCUSTOMSHELL_SUBTITLE_ZH}"

; unCustomShell Field1 description (DESC_unCustomShellField1)
LangString DESC_unCustomShellField1 ${LANG_ENGLISH} "${i18n_DESC_unCustomShellField1_EN}"
LangString DESC_unCustomShellField1 ${LANG_CATALAN} "${i18n_DESC_unCustomShellField1_CA}"
LangString DESC_unCustomShellField1 ${LANG_CZECH} "${i18n_DESC_unCustomShellField1_CZ}"
LangString DESC_unCustomShellField1 ${LANG_DANISH} "${i18n_DESC_unCustomShellField1_DA}"
LangString DESC_unCustomShellField1 ${LANG_GERMAN} "${i18n_DESC_unCustomShellField1_DE}"
LangString DESC_unCustomShellField1 ${LANG_SPANISH} "${i18n_DESC_unCustomShellField1_ES}"
LangString DESC_unCustomShellField1 ${LANG_FRENCH} "${i18n_DESC_unCustomShellField1_FR}"
LangString DESC_unCustomShellField1 ${LANG_JAPANESE} "${i18n_DESC_unCustomShellField1_JA}"
LangString DESC_unCustomShellField1 ${LANG_KOREAN} "${i18n_DESC_unCustomShellField1_KO}"
LangString DESC_unCustomShellField1 ${LANG_LITHUANIAN} "${i18n_DESC_unCustomShellField1_LT}"
LangString DESC_unCustomShellField1 ${LANG_DUTCH} "${i18n_DESC_unCustomShellField1_NL}"
LangString DESC_unCustomShellField1 ${LANG_NORWEGIAN} "${i18n_DESC_unCustomShellField1_NO}"
LangString DESC_unCustomShellField1 ${LANG_POLISH} "${i18n_DESC_unCustomShellField1_PL}"
LangString DESC_unCustomShellField1 ${LANG_PORTUGUESEBR} "${i18n_DESC_unCustomShellField1_PT_BR}"
LangString DESC_unCustomShellField1 ${LANG_PORTUGUESE} "${i18n_DESC_unCustomShellField1_PT_PT}"
LangString DESC_unCustomShellField1 ${LANG_RUSSIAN} "${i18n_DESC_unCustomShellField1_RU}"
LangString DESC_unCustomShellField1 ${LANG_SLOVENIAN} "${i18n_DESC_unCustomShellField1_SL}"
LangString DESC_unCustomShellField1 ${LANG_TRADCHINESE} "${i18n_DESC_unCustomShellField1_ZH}"

; unCustomShell Field2 description (DESC_unCustomShellField2)
LangString DESC_unCustomShellField2 ${LANG_ENGLISH} "${i18n_DESC_unCustomShellField2_EN}"
LangString DESC_unCustomShellField2 ${LANG_CATALAN} "${i18n_DESC_unCustomShellField2_CA}"
LangString DESC_unCustomShellField2 ${LANG_CZECH} "${i18n_DESC_unCustomShellField2_CZ}"
LangString DESC_unCustomShellField2 ${LANG_DANISH} "${i18n_DESC_unCustomShellField2_DA}"
LangString DESC_unCustomShellField2 ${LANG_GERMAN} "${i18n_DESC_unCustomShellField2_DE}"
LangString DESC_unCustomShellField2 ${LANG_SPANISH} "${i18n_DESC_unCustomShellField2_ES}"
LangString DESC_unCustomShellField2 ${LANG_FRENCH} "${i18n_DESC_unCustomShellField2_FR}"
LangString DESC_unCustomShellField2 ${LANG_JAPANESE} "${i18n_DESC_unCustomShellField2_JA}"
LangString DESC_unCustomShellField2 ${LANG_KOREAN} "${i18n_DESC_unCustomShellField2_KO}"
LangString DESC_unCustomShellField2 ${LANG_LITHUANIAN} "${i18n_DESC_unCustomShellField2_LT}"
LangString DESC_unCustomShellField2 ${LANG_DUTCH} "${i18n_DESC_unCustomShellField2_NL}"
LangString DESC_unCustomShellField2 ${LANG_NORWEGIAN} "${i18n_DESC_unCustomShellField2_NO}"
LangString DESC_unCustomShellField2 ${LANG_POLISH} "${i18n_DESC_unCustomShellField2_PL}"
LangString DESC_unCustomShellField2 ${LANG_PORTUGUESEBR} "${i18n_DESC_unCustomShellField2_PT_BR}"
LangString DESC_unCustomShellField2 ${LANG_PORTUGUESE} "${i18n_DESC_unCustomShellField2_PT_PT}"
LangString DESC_unCustomShellField2 ${LANG_RUSSIAN} "${i18n_DESC_unCustomShellField2_RU}"
LangString DESC_unCustomShellField2 ${LANG_SLOVENIAN} "${i18n_DESC_unCustomShellField2_SL}"
LangString DESC_unCustomShellField2 ${LANG_TRADCHINESE} "${i18n_DESC_unCustomShellField2_ZH}"

; Version Tab information
VIProductVersion "${EXODUS_VERSION}"
; English
VIAddVersionKey /LANG=${LANG_ENGLISH} "ProductName" "${PRODUCT}"
VIAddVersionKey /LANG=${LANG_ENGLISH} "CompanyName" "${PRODUCT_COMPANY}"
VIAddVersionKey /LANG=${LANG_ENGLISH} "LegalCopyright" "${PRODUCT_COPYRIGHT}"
VIAddVersionKey /LANG=${LANG_ENGLISH} "Comments" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_ENGLISH} "FileDescription" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_ENGLISH} "FileVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_ENGLISH} "ProductVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_ENGLISH} "InternalName" "${INSTALLER_OUTPUT}"
VIAddVersionKey /LANG=${LANG_ENGLISH} "OriginalFilename" "${INSTALLER_OUTPUT}${EXEC_EXTENSION}"
; Catalan
VIAddVersionKey /LANG=${LANG_CATALAN} "ProductName" "${PRODUCT}"
VIAddVersionKey /LANG=${LANG_CATALAN} "CompanyName" "${PRODUCT_COMPANY}"
VIAddVersionKey /LANG=${LANG_CATALAN} "LegalCopyright" "${PRODUCT_COPYRIGHT}"
VIAddVersionKey /LANG=${LANG_CATALAN} "Comments" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_CATALAN} "FileDescription" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_CATALAN} "FileVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_CATALAN} "ProductVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_CATALAN} "InternalName" "${INSTALLER_OUTPUT}"
VIAddVersionKey /LANG=${LANG_CATALAN} "OriginalFilename" "${INSTALLER_OUTPUT}${EXEC_EXTENSION}"
; Czech
VIAddVersionKey /LANG=${LANG_CZECH} "ProductName" "${PRODUCT}"
VIAddVersionKey /LANG=${LANG_CZECH} "CompanyName" "${PRODUCT_COMPANY}"
VIAddVersionKey /LANG=${LANG_CZECH} "LegalCopyright" "${PRODUCT_COPYRIGHT}"
VIAddVersionKey /LANG=${LANG_CZECH} "Comments" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_CZECH} "FileDescription" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_CZECH} "FileVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_CZECH} "ProductVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_CZECH} "InternalName" "${INSTALLER_OUTPUT}"
VIAddVersionKey /LANG=${LANG_CZECH} "OriginalFilename" "${INSTALLER_OUTPUT}${EXEC_EXTENSION}"
; Danish
VIAddVersionKey /LANG=${LANG_DANISH} "ProductName" "${PRODUCT}"
VIAddVersionKey /LANG=${LANG_DANISH} "CompanyName" "${PRODUCT_COMPANY}"
VIAddVersionKey /LANG=${LANG_DANISH} "LegalCopyright" "${PRODUCT_COPYRIGHT}"
VIAddVersionKey /LANG=${LANG_DANISH} "Comments" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_DANISH} "FileDescription" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_DANISH} "FileVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_DANISH} "ProductVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_DANISH} "InternalName" "${INSTALLER_OUTPUT}"
VIAddVersionKey /LANG=${LANG_DANISH} "OriginalFilename" "${INSTALLER_OUTPUT}${EXEC_EXTENSION}"
; German
VIAddVersionKey /LANG=${LANG_GERMAN} "ProductName" "${PRODUCT}"
VIAddVersionKey /LANG=${LANG_GERMAN} "CompanyName" "${PRODUCT_COMPANY}"
VIAddVersionKey /LANG=${LANG_GERMAN} "LegalCopyright" "${PRODUCT_COPYRIGHT}"
VIAddVersionKey /LANG=${LANG_GERMAN} "Comments" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_GERMAN} "FileDescription" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_GERMAN} "FileVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_GERMAN} "ProductVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_GERMAN} "InternalName" "${INSTALLER_OUTPUT}"
VIAddVersionKey /LANG=${LANG_GERMAN} "OriginalFilename" "${INSTALLER_OUTPUT}${EXEC_EXTENSION}"
; Spanish
VIAddVersionKey /LANG=${LANG_SPANISH} "ProductName" "${PRODUCT}"
VIAddVersionKey /LANG=${LANG_SPANISH} "CompanyName" "${PRODUCT_COMPANY}"
VIAddVersionKey /LANG=${LANG_SPANISH} "LegalCopyright" "${PRODUCT_COPYRIGHT}"
VIAddVersionKey /LANG=${LANG_SPANISH} "Comments" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_SPANISH} "FileDescription" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_SPANISH} "FileVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_SPANISH} "ProductVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_SPANISH} "InternalName" "${INSTALLER_OUTPUT}"
VIAddVersionKey /LANG=${LANG_SPANISH} "OriginalFilename" "${INSTALLER_OUTPUT}${EXEC_EXTENSION}"
; French
VIAddVersionKey /LANG=${LANG_FRENCH} "ProductName" "${PRODUCT}"
VIAddVersionKey /LANG=${LANG_FRENCH} "CompanyName" "${PRODUCT_COMPANY}"
VIAddVersionKey /LANG=${LANG_FRENCH} "LegalCopyright" "${PRODUCT_COPYRIGHT}"
VIAddVersionKey /LANG=${LANG_FRENCH} "Comments" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_FRENCH} "FileDescription" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_FRENCH} "FileVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_FRENCH} "ProductVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_FRENCH} "InternalName" "${INSTALLER_OUTPUT}"
VIAddVersionKey /LANG=${LANG_FRENCH} "OriginalFilename" "${INSTALLER_OUTPUT}${EXEC_EXTENSION}"
; Japanese
VIAddVersionKey /LANG=${LANG_JAPANESE} "ProductName" "${PRODUCT}"
VIAddVersionKey /LANG=${LANG_JAPANESE} "CompanyName" "${PRODUCT_COMPANY}"
VIAddVersionKey /LANG=${LANG_JAPANESE} "LegalCopyright" "${PRODUCT_COPYRIGHT}"
VIAddVersionKey /LANG=${LANG_JAPANESE} "Comments" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_JAPANESE} "FileDescription" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_JAPANESE} "FileVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_JAPANESE} "ProductVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_JAPANESE} "InternalName" "${INSTALLER_OUTPUT}"
VIAddVersionKey /LANG=${LANG_JAPANESE} "OriginalFilename" "${INSTALLER_OUTPUT}${EXEC_EXTENSION}"
; Korean
VIAddVersionKey /LANG=${LANG_KOREAN} "ProductName" "${PRODUCT}"
VIAddVersionKey /LANG=${LANG_KOREAN} "CompanyName" "${PRODUCT_COMPANY}"
VIAddVersionKey /LANG=${LANG_KOREAN} "LegalCopyright" "${PRODUCT_COPYRIGHT}"
VIAddVersionKey /LANG=${LANG_KOREAN} "Comments" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_KOREAN} "FileDescription" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_KOREAN} "FileVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_KOREAN} "ProductVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_KOREAN} "InternalName" "${INSTALLER_OUTPUT}"
VIAddVersionKey /LANG=${LANG_KOREAN} "OriginalFilename" "${INSTALLER_OUTPUT}${EXEC_EXTENSION}"
; Lithuanian
VIAddVersionKey /LANG=${LANG_LITHUANIAN} "ProductName" "${PRODUCT}"
VIAddVersionKey /LANG=${LANG_LITHUANIAN} "CompanyName" "${PRODUCT_COMPANY}"
VIAddVersionKey /LANG=${LANG_LITHUANIAN} "LegalCopyright" "${PRODUCT_COPYRIGHT}"
VIAddVersionKey /LANG=${LANG_LITHUANIAN} "Comments" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_LITHUANIAN} "FileDescription" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_LITHUANIAN} "FileVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_LITHUANIAN} "ProductVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_LITHUANIAN} "InternalName" "${INSTALLER_OUTPUT}"
VIAddVersionKey /LANG=${LANG_LITHUANIAN} "OriginalFilename" "${INSTALLER_OUTPUT}${EXEC_EXTENSION}"
; Dutch
VIAddVersionKey /LANG=${LANG_DUTCH} "ProductName" "${PRODUCT}"
VIAddVersionKey /LANG=${LANG_DUTCH} "CompanyName" "${PRODUCT_COMPANY}"
VIAddVersionKey /LANG=${LANG_DUTCH} "LegalCopyright" "${PRODUCT_COPYRIGHT}"
VIAddVersionKey /LANG=${LANG_DUTCH} "Comments" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_DUTCH} "FileDescription" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_DUTCH} "FileVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_DUTCH} "ProductVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_DUTCH} "InternalName" "${INSTALLER_OUTPUT}"
VIAddVersionKey /LANG=${LANG_DUTCH} "OriginalFilename" "${INSTALLER_OUTPUT}${EXEC_EXTENSION}"
; Norwegian
VIAddVersionKey /LANG=${LANG_NORWEGIAN} "ProductName" "${PRODUCT}"
VIAddVersionKey /LANG=${LANG_NORWEGIAN} "CompanyName" "${PRODUCT_COMPANY}"
VIAddVersionKey /LANG=${LANG_NORWEGIAN} "LegalCopyright" "${PRODUCT_COPYRIGHT}"
VIAddVersionKey /LANG=${LANG_NORWEGIAN} "Comments" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_NORWEGIAN} "FileDescription" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_NORWEGIAN} "FileVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_NORWEGIAN} "ProductVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_NORWEGIAN} "InternalName" "${INSTALLER_OUTPUT}"
VIAddVersionKey /LANG=${LANG_NORWEGIAN} "OriginalFilename" "${INSTALLER_OUTPUT}${EXEC_EXTENSION}"
; Polish
VIAddVersionKey /LANG=${LANG_POLISH} "ProductName" "${PRODUCT}"
VIAddVersionKey /LANG=${LANG_POLISH} "CompanyName" "${PRODUCT_COMPANY}"
VIAddVersionKey /LANG=${LANG_POLISH} "LegalCopyright" "${PRODUCT_COPYRIGHT}"
VIAddVersionKey /LANG=${LANG_POLISH} "Comments" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_POLISH} "FileDescription" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_POLISH} "FileVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_POLISH} "ProductVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_POLISH} "InternalName" "${INSTALLER_OUTPUT}"
VIAddVersionKey /LANG=${LANG_POLISH} "OriginalFilename" "${INSTALLER_OUTPUT}${EXEC_EXTENSION}"
; Brazilian Portuguese
VIAddVersionKey /LANG=${LANG_PORTUGUESEBR} "ProductName" "${PRODUCT}"
VIAddVersionKey /LANG=${LANG_PORTUGUESEBR} "CompanyName" "${PRODUCT_COMPANY}"
VIAddVersionKey /LANG=${LANG_PORTUGUESEBR} "LegalCopyright" "${PRODUCT_COPYRIGHT}"
VIAddVersionKey /LANG=${LANG_PORTUGUESEBR} "Comments" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_PORTUGUESEBR} "FileDescription" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_PORTUGUESEBR} "FileVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_PORTUGUESEBR} "ProductVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_PORTUGUESEBR} "InternalName" "${INSTALLER_OUTPUT}"
VIAddVersionKey /LANG=${LANG_PORTUGUESEBR} "OriginalFilename" "${INSTALLER_OUTPUT}${EXEC_EXTENSION}"
; Portuguese
VIAddVersionKey /LANG=${LANG_PORTUGUESE} "ProductName" "${PRODUCT}"
VIAddVersionKey /LANG=${LANG_PORTUGUESE} "CompanyName" "${PRODUCT_COMPANY}"
VIAddVersionKey /LANG=${LANG_PORTUGUESE} "LegalCopyright" "${PRODUCT_COPYRIGHT}"
VIAddVersionKey /LANG=${LANG_PORTUGUESE} "Comments" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_PORTUGUESE} "FileDescription" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_PORTUGUESE} "FileVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_PORTUGUESE} "ProductVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_PORTUGUESE} "InternalName" "${INSTALLER_OUTPUT}"
VIAddVersionKey /LANG=${LANG_PORTUGUESE} "OriginalFilename" "${INSTALLER_OUTPUT}${EXEC_EXTENSION}"
; Russian
VIAddVersionKey /LANG=${LANG_RUSSIAN} "ProductName" "${PRODUCT}"
VIAddVersionKey /LANG=${LANG_RUSSIAN} "CompanyName" "${PRODUCT_COMPANY}"
VIAddVersionKey /LANG=${LANG_RUSSIAN} "LegalCopyright" "${PRODUCT_COPYRIGHT}"
VIAddVersionKey /LANG=${LANG_RUSSIAN} "Comments" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_RUSSIAN} "FileDescription" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_RUSSIAN} "FileVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_RUSSIAN} "ProductVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_RUSSIAN} "InternalName" "${INSTALLER_OUTPUT}"
VIAddVersionKey /LANG=${LANG_RUSSIAN} "OriginalFilename" "${INSTALLER_OUTPUT}${EXEC_EXTENSION}"
; Slovenian
VIAddVersionKey /LANG=${LANG_SLOVENIAN} "ProductName" "${PRODUCT}"
VIAddVersionKey /LANG=${LANG_SLOVENIAN} "CompanyName" "${PRODUCT_COMPANY}"
VIAddVersionKey /LANG=${LANG_SLOVENIAN} "LegalCopyright" "${PRODUCT_COPYRIGHT}"
VIAddVersionKey /LANG=${LANG_SLOVENIAN} "Comments" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_SLOVENIAN} "FileDescription" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_SLOVENIAN} "FileVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_SLOVENIAN} "ProductVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_SLOVENIAN} "InternalName" "${INSTALLER_OUTPUT}"
VIAddVersionKey /LANG=${LANG_SLOVENIAN} "OriginalFilename" "${INSTALLER_OUTPUT}${EXEC_EXTENSION}"
; Traditional Chinese
VIAddVersionKey /LANG=${LANG_TRADCHINESE} "ProductName" "${PRODUCT}"
VIAddVersionKey /LANG=${LANG_TRADCHINESE} "CompanyName" "${PRODUCT_COMPANY}"
VIAddVersionKey /LANG=${LANG_TRADCHINESE} "LegalCopyright" "${PRODUCT_COPYRIGHT}"
VIAddVersionKey /LANG=${LANG_TRADCHINESE} "Comments" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_TRADCHINESE} "FileDescription" "${PRODUCT_COMMENTS}"
VIAddVersionKey /LANG=${LANG_TRADCHINESE} "FileVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_TRADCHINESE} "ProductVersion" "${EXODUS_VERSION}"
VIAddVersionKey /LANG=${LANG_TRADCHINESE} "InternalName" "${INSTALLER_OUTPUT}"
VIAddVersionKey /LANG=${LANG_TRADCHINESE} "OriginalFilename" "${INSTALLER_OUTPUT}${EXEC_EXTENSION}"


/*
    include the installer plugin sections localization

    BRANDING: Make sure to modify the following files in
    the plugin directory to match the set of plugins you
    wish to distribute:
        plugin-locale-new.nsh
        plugin-sections-new.nsi
        plugin-desc-new.nsi
        plugin-i18n-new.nsi
        plugin-off-new.nsi
*/
!include "plugin-i18n-new.nsh"


/*
    commands
*/
; The file to write
Name "${PRODUCT} ${EXODUS_VERSION}"
OutFile "${INSTALLER_OUTPUT}${EXEC_EXTENSION}"
!ifdef DEBUG ; don't know if there is a reason for the forced show but I'll risk it
    ShowInstDetails show
    ShowUninstDetails show
!else
    ShowInstDetails hide
    ShowUninstDetails hide
!endif

; The default installation directory
InstallDir "$PROGRAMFILES\${PRODUCT}"
; Registry key to check for directory (so if you install again, it will
; overwrite the old one automatically)
!ifdef USE_HKLM_KEY
    InstallDirRegKey HKLM "${PRODUCT_REGISTRY_KEY}" "${PRODUCT_INSTALL_PATH_KEY}"
!else
    InstallDirRegKey HKCU "${PRODUCT_REGISTRY_KEY}" "${PRODUCT_INSTALL_PATH_KEY}"
!endif


/*
    sections
*/
Section "$(NAME_Exodus)" SEC_Exodus
    ; shut down running instances
    Call NotifyInstances

    ; Set output path to the installation directory.
    SetOutPath $INSTDIR
    File "${PRODUCT}${EXEC_EXTENSION}"
    File "${IDLEHOOKS}${DLL_EXTENSION}"
    File "${MSN_EMOTICONS}${DLL_EXTENSION}"
    File "${YAHOO_EMOTICONS}${DLL_EXTENSION}"
    
    ; Daily builds should include the MAP file to get detailed AV reports.
    !ifdef DAILY
        File "${PRODUCT}${MAP_EXTENSION}"
    !endif

    ; Make sure exodus is registered, for Win95 and NT4
    ; We need to do this to ensure that plugins can register properly.
    ExecWait '"$INSTDIR\${PRODUCT}${EXEC_EXTENSION}" -0'

    ; BRANDING: Uncomment if you are doing a branded setup.
    ; SetOverwrite off ; only if you don't want to overwrite existing file.
    ; File "${BRANDING_FILE}${XML_EXTENSION}"
    ; SetOverwrite on
    
    ; version(riched20) >= 5.30
    GetDLLVersion "$SYSDIR\${RICHED}${DLL_EXTENSION}" $R0 $R1
    IntOp $R1 $R0 / 65536
    IntOp $R2 $R0 & 0x00FF
    DetailPrint "$(MSG_RichEdVersion): $R1.$R2"
    
    ; if the installed version is >= to 5.30, skip ahead.
    IntCmp 327710 $R0 lbl_reportVer lbl_reportVer
    
    DetailPrint "$(MSG_RichEdUpgrade)"
!ifndef NO_NETWORK
    ; BRANDING: change this URL
    NSISdl::download "${HOME_URL}/${RICHED_UPDATER}${EXEC_EXTENSION}" "$INSTDIR\${RICHED_UPDATER}${EXEC_EXTENSION}"
    Pop $R0
    StrCmp "$R0" "${NSISDL_SUCCESSFUL}" lbl_execrich
    Abort "$(MSG_RichEdAbort)"
  lbl_execrich:
!else
    File "..\${RICHED_UPDATER}${EXEC_EXTENSION}"
!endif
    MessageBox MB_OK "$(MSG_NoReboot)"

    ExecWait '"$INSTDIR\${RICHED_UPDATER}${EXEC_EXTENSION} /Q"'
    SetRebootFlag true
    
  lbl_reportVer:
    DetailPrint "$(MSG_RichEdOK)"
    
    ; delete any leftover richupd.exe file.  This should not error
    ; if the file doesn't exist.
    Delete $INSTDIR\${RICHED_UPDATER}${EXEC_EXTENSION}
    
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; Update common controls, if needed 5.80
    GetDLLVersion "$SYSDIR\${COMCTL}${DLL_EXTENSION}" $R0 $R1
    IntOp $R1 $R0 / 65536
    IntOp $R2 $R0 & 0x00FF
    DetailPrint "$(MSG_COMCtlVersion): $R1.$R2"
    
    ; (5 << 16) + 80 w00t!
    ; if the installed version is >= to 5.80, skip ahead.
    IntCmp 327760 $R0 com_reportVer com_reportVer
    
    DetailPrint "$(MSG_COMCtlUpgrade)"
!ifndef NO_NETWORK
    ; BRANDING: change this URL
    NSISdl::download "${HOME_URL}/${COMCTL_UPDATER}${EXEC_EXTENSION}" "$INSTDIR\${COMCTL_UPDATER}${EXEC_EXTENSION}"
    Pop $R0
    StrCmp "$R0" "${NSISDL_SUCCESSFUL}" lbl_exec_com
    Abort "$(MSG_COMCtlAbort)"
  lbl_exec_com:
!else
    File "..\${COMCTL_UPDATER}${EXEC_EXTENSION}"
!endif
    MessageBox MB_OK "$(MSG_NoReboot)"
    ExecWait '"$INSTDIR\${COMCTL_UPDATER}${EXEC_EXTENSION}" /Q'
    SetRebootFlag true

  com_reportVer:
    DetailPrint "$(MSG_COMCtlOK)"
    
    ; delete any leftover 50comupd.exe file.  This should not error
    ; if the file doesn't exist.
    Delete "$INSTDIR\${COMCTL_UPDATER}${EXEC_EXTENSION}"
    
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; Check for Win95, and no Winsock2
    Call funcGetWindowsVersion
    Pop $R0
    ; at this point $R0 is "95" or "NT 4.0"
    StrCmp "$R0" "${WINSOCK_SYSVER}" win95 winsock_done
  win95:
    IfFileExists "$SYSDIR\${WINSOCK}${DLL_EXTENSION}" winsock_done
    DetailPrint "$(MSG_WinsockUpgrade)"
!ifndef NO_NETWORK
    ; BRANDING: change this URL
    NSISdl::download "${HOME_URL}/${WINSOCK_UPDATER}${EXEC_EXTENSION}" "$INSTDIR\${WINSOCK_UPDATER}${EXEC_EXTENSION}"
    Pop $R0
    StrCmp "$R0" "${NSISDL_SUCCESSFUL}" lbl_exec_winsock2
    Abort "$(MSG_WinsockAbort)"
  lbl_exec_winsock2:
!else
    File "..\${WINSOCK_UPDATER}${EXEC_EXTENSION}"
!endif
    MessageBox MB_OK "$(MSG_NoReboot)"
    ExecWait '"$INSTDIR\${WINSOCK_UPDATER}${EXEC_EXTENSION}" /Q'
    SetRebootFlag true
        
  winsock_done:
    DetailPrint "$(MSG_WinsockOK)"
    Delete "$INSTDIR\${WINSOCK_UPDATER}${EXEC_EXTENSION}"
    
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
    ; Setup stuff based on custom Shell page
    Push "${INSTALLER_SWITCH_SILENT}"
    Call funcGetConfigParam
    Pop $0
    IntCmpU '$0' '1' noshell
!ifdef USE_HKLM_KEY
    SetShellVarContext all
!else
    SetShellVarContext current
!endif
    !insertmacro MUI_INSTALLOPTIONS_READ "$R0" "${CUSTOMSHELL}${INI_EXTENSION}" "${CUSTOMSHELL_FIELD2}" "${CUSTOMSHELL_OPTION_STATE}"
    IntCmpU '$R0' '1' 0 +2
    ;Checked
    CreateShortcut "$DESKTOP\${PRODUCT}${LINK_EXTENSION}" "$INSTDIR\${PRODUCT}${EXEC_EXTENSION}"
    !insertmacro MUI_INSTALLOPTIONS_READ "$R0" "${CUSTOMSHELL}${INI_EXTENSION}" "${CUSTOMSHELL_FIELD3}" "${CUSTOMSHELL_OPTION_STATE}"
    IntCmpU '$R0' '1' 0 +2
    ;Checked
    CreateShortcut "$QUICKLAUNCH\${PRODUCT}${LINK_EXTENSION}" "$INSTDIR\${PRODUCT}${EXEC_EXTENSION}"
    !insertmacro MUI_INSTALLOPTIONS_READ "$R0" "${CUSTOMSHELL}${INI_EXTENSION}" "${CUSTOMSHELL_FIELD4}" "${CUSTOMSHELL_OPTION_STATE}"
    IntCmpU '$R0' '1' 0 noshell
    ;Checked
!ifdef USE_HKLM_KEY
    WriteRegStr HKLM "${PRODUCT_RUN_KEY}" "${PRODUCT}" "$INSTDIR\${PRODUCT}${EXEC_EXTENSION}"
!else
    WriteRegStr HKCU "${PRODUCT_RUN_KEY}" "${PRODUCT}" "$INSTDIR\${PRODUCT}${EXEC_EXTENSION}"
!endif

  noshell:

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; Write the installation path into the registry
!ifdef USE_HKLM_KEY
    WriteRegStr HKLM "${PRODUCT_REGISTRY_KEY}" "${PRODUCT_INSTALL_PATH_KEY}" "$INSTDIR"
!else
    WriteRegStr HKCU "${PRODUCT_REGISTRY_KEY}" "${PRODUCT_INSTALL_PATH_KEY}" "$INSTDIR"
!endif

    ; Write the uninstall keys for Windows
    WriteRegStr HKLM "${PRODUCT_UNINSTALL_KEY}" "${PRODUCT_UNINSTALL_DISPLAY_KEY}" \
        "${PRODUCT_UNINSTALL_DISPLAY_VAL}"
    WriteRegStr HKLM "${PRODUCT_UNINSTALL_KEY}" "${PRODUCT_UNINSTALL_COMMAND_KEY}" \
        '"$INSTDIR\${PRODUCT_UNINSTALLER}${EXEC_EXTENSION}"'
    WriteUninstaller "${PRODUCT_UNINSTALLER}${EXEC_EXTENSION}"

    ; register file associations.  TODO: figure this out for real, and
    ; remove these semi-bogus ones.
    WriteRegStr HKCR "${XMPP_EXTENSION}" "" "${XMPPFILE}"
    WriteRegStr HKCR "${XMPP_EXTENSION}" "${CONTENT_TYPE_KEY}" "${XMPP_CONTENT_TYPE}"
    WriteRegStr HKCR "${XMPPFILE}" "" "${XMPP_DESC}"
    WriteRegDword HKCR "${XMPPFILE}" "${EDIT_FLAGS_KEY}" "${XMPP_EDIT_FLAGS}"
    WriteRegDword HKCR "${XMPPFILE}" "${BROWSER_FLAGS_KEY}" "${XMPP_BROWSER_FLAGS}"
    WriteRegStr HKCR "${XMPP_SHELL_KEY}" "" "${SHELL_OPEN_KEY}"
    WriteRegStr HKCR "${XMPP_SHELL_OPEN_COMMAND_KEY}" "" "$INSTDIR\${PRODUCT}${EXEC_EXTENSION} ${XMPP_SHELL_OPEN_COMMAND_VAL}"
    WriteRegStr HKCR "${XMPP_SHELL_OPEN_DDE_KEY}" "" "${XMPP_SHELL_OPEN_DDE_VAL}"
    WriteRegStr HKCR "${XMPP_SHELL_OPEN_DDE_APP_KEY}" "" "${PRODUCT}"
    WriteRegStr HKCR "${XMPP_SHELL_OPEN_DDE_IF_KEY}" "" "${IGNORE_KEY}"
    WriteRegStr HKCR "${XMPP_SHELL_OPEN_DDE_TOPIC_KEY}" "" "${XMPP_ACTION}"
    WriteRegStr HKCR "${XMPP_MIME_KEY}" "${EXTENSION_KEY}" "${XMPP_EXTENSION}"
    
SectionEnd ; end the section

Section "$(NAME_SSL)" SEC_SSL
!ifndef NO_NETWORK
    AddSize 824
!endif
    IfFileExists "$INSTDIR\${SSLEAY}${DLL_EXTENSION}" libea need_ssl
  libea:
    IfFileExists "$INSTDIR\${LIBEAY}${DLL_EXTENSION}" no_ssl
  need_ssl:

!ifndef NO_NETWORK
    ; BRANDING: Change this URL
    NSISdl::download "${HOME_URL}/${SSL_INSTALLER}${ZIP_EXTENSION}" "$INSTDIR\${SSL_INSTALLER}${ZIP_EXTENSION}"
    Pop $R0
    StrCmp "$R0" "${NSISDL_SUCCESSFUL}" ssl
    Abort "$(MSG_SSLAbort)"
  ssl:
    !insertmacro MUI_ZIPDLL_EXTRACTALL "$INSTDIR\${SSL_INSTALLER}${ZIP_EXTENSION}" "$INSTDIR"
    Delete "$INSTDIR\${SSL_INSTALLER}${ZIP_EXTENSION}"
    Delete "$INSTDIR\${README}${TEXT_EXTENSION}"
!else
    File "${LIBEAY}${DLL_EXTENSION}"
    File "${SSLEAY}${DLL_EXTENSION}"
!endif
    goto ssl_done
  no_ssl:
    DetailPrint "$(MSG_SSLOK)"
    ssl_done:
SectionEnd

SubSection "$(NAME_Plugins)" SEC_Plugins
    !include "plugin-sections-new.nsi"
SubSectionEnd

; Start menu shortcuts
Section "" SEC_Menu
    ; if in silent mode, don't do any of the menu stuff, ever
    Push "${INSTALLER_SWITCH_SILENT}"
    Call funcGetConfigParam
    Pop $0
    IntCmpU '$0' '1' silent
    !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
!ifdef USE_HKLM_KEY
    SetShellVarContext all
!else
    SetShellVarContext current
!endif
    CreateDirectory "$SMPROGRAMS\$STARTMENU_FOLDER"
    CreateShortCut "$SMPROGRAMS\$STARTMENU_FOLDER\${PRODUCT_UNINSTALLER}${LINK_EXTENSION}" \
        "$INSTDIR\${PRODUCT_UNINSTALLER}${EXEC_EXTENSION}"
    CreateShortCut "$SMPROGRAMS\$STARTMENU_FOLDER\${PRODUCT}${LINK_EXTENSION}" "$INSTDIR\${PRODUCT}${EXEC_EXTENSION}"

    ; BRANDING: Change this URL
    CreateShortCut \
        "$SMPROGRAMS\$STARTMENU_FOLDER\${PRODUCT} ${HOMEPAGE}${LINK_EXTENSION}" \
        "${HOME_URL}"
    !insertmacro MUI_STARTMENU_WRITE_END

  silent:
SectionEnd

; BRANDING: Remove this section
Section "$(NAME_Bleed)" SEC_Bleed
    SetOverwrite off
    File "${BRANDING_FILE}${XML_EXTENSION}"
    SetOverwrite on
SectionEnd

Section "$(NAME_Locale)" SEC_Locale
    File "${LOCALE}${ZIP_EXTENSION}"
    !insertmacro MUI_ZIPDLL_EXTRACTALL "$INSTDIR\${LOCALE}${ZIP_EXTENSION}" "$INSTDIR"
    Delete "$INSTDIR\${LOCALE}${ZIP_EXTENSION}"
!ifdef USE_HKLM_KEY
    WriteRegStr HKLM "${PRODUCT_REGISTRY_KEY}" "${PRODUCT_LOCALES_KEY}" "1"
!else
    WriteRegStr HKCU "${PRODUCT_REGISTRY_KEY}" "${PRODUCT_LOCALES_KEY}" "1"
!endif
SectionEnd

; special uninstall section.
Section "Uninstall"
    ; remove shortcuts
    !insertmacro MUI_STARTMENU_GETFOLDER Application "$0"
!ifdef USE_HKLM_KEY
    SetShellVarContext all
!else
    SetShellVarContext current
!endif

    StrCmp "$0" "" noshortcuts
    Delete /REBOOTOK "$SMPROGRAMS\$0\${PRODUCT_UNINSTALLER}${LINK_EXTENSION}"
    Delete /REBOOTOK "$SMPROGRAMS\$0\${PRODUCT}${LINK_EXTENSION}"
    Delete /REBOOTOK "$SMPROGRAMS\$0\${PRODUCT} ${HOMEPAGE}${LINK_EXTENSION}"
    RMDir /REBOOTOK "$SMPROGRAMS\$0"

  noshortcuts:
    ; remove shell hooks
    Delete /REBOOTOK "$DESKTOP\${PRODUCT}${LINK_EXTENSION}"
    Delete /REBOOTOK "$QUICKLAUNCH\${PRODUCT}${LINK_EXTENSION}"
!warning "$\r$\nATTENTION:  The UnRegDLL command is making the uninstaller crash.$\r$\n$\t$\tIt was disabled, chech the source starting at line: ${__LINE__}"
/*
    ; unregister all of the plugin .dll's
    ClearErrors
    FindFirst "$0" "$1" "$INSTDIR\${PLUGINS_DIR}\*${DLL_EXTENSION}"
    IfErrors dllregdone
  nextdll:
    UnRegDLL "$INSTDIR\${PLUGINS_DIR}\$1"
    ClearErrors
    FindNext "$0" "$1"
    IfErrors dllregdone nextdll
  dllregdone:
    FindClose "$0"
*/
    ; remove plugins
    RMDir /r "$INSTDIR\${PLUGINS_DIR}"

    ; remove localization files
    RMDir /r "$INSTDIR\${LOCALE}"

    ; remove files
    Delete /REBOOTOK "$INSTDIR\${PRODUCT}${EXEC_EXTENSION}"
    Delete /REBOOTOK "$INSTDIR\${IDLEHOOKS}${DLL_EXTENSION}"
    Delete /REBOOTOK "$INSTDIR\${MSN_EMOTICONS}${DLL_EXTENSION}"
    Delete /REBOOTOK "$INSTDIR\${YAHOO_EMOTICONS}${DLL_EXTENSION}"
    Delete /REBOOTOK "$INSTDIR\${BRANDING_FILE}${XML_EXTENSION}"
    Delete /REBOOTOK "$INSTDIR\${LIBEAY}${DLL_EXTENSION}"
    Delete /REBOOTOK "$INSTDIR\${SSLEAY}${DLL_EXTENSION}"

    ; MUST REMOVE UNINSTALLER, too
    Delete /REBOOTOK "$INSTDIR\${PRODUCT_UNINSTALLER}${EXEC_EXTENSION}"
    ; Remove all files in the installation dir
    RMDir /REBOOTOK "$INSTDIR"

    ReadRegStr "$0" HKCU "${PRODUCT_REGISTRY_KEY}" "${PRODUCT_PREFS_FILE_KEY}"
    Delete /REBOOTOK "$0"
    DeleteRegValue HKCU "${PRODUCT_REGISTRY_KEY}" "${PRODUCT_PREFS_FILE_KEY}"

    ; Remove the user logs based on user input
    ;!insertmacro MUI_INSTALLOPTIONS_READ "$R0" "${UNCUSTOMSHELL}${INI_EXTENSION}" "${CUSTOMSHELL_FIELD2}" "${CUSTOMSHELL_OPTION_STATE}"
    ;IntCmpU '$R0' '1' 0 +3
    ;Checked
    ;Push "$0"
    ;Call un.funcRemoveUserLogs

    ; TODO: remove keys and files for every user

    ; remove registry keys
!ifdef USE_HKLM_KEY
    DeleteRegKey HKLM "${PRODUCT_REGISTRY_KEY}"
    DeleteRegKey /ifempty HKLM "${JABBER_REGISTRY_KEY}"
    DeleteRegValue HKLM "${PRODUCT_RUN_KEY}" "${PRODUCT}"
!else
    DeleteRegKey HKCU "${PRODUCT_REGISTRY_KEY}"
    DeleteRegKey /ifempty HKCU "${JABBER_REGISTRY_KEY}"
    DeleteRegValue HKCU "${PRODUCT_RUN_KEY}" "${PRODUCT}"
!endif
    DeleteRegKey HKCR "${XMPP_EXTENSION}"
    DeleteRegKey HKCR "${XMPPFILE}"
    DeleteRegKey HKCR "${XMPP_MIME_KEY}"
    DeleteRegKey HKLM "${PRODUCT_UNINSTALL_KEY}"
SectionEnd


/*
    Modern install component descriptions
*/
!insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
    !insertmacro MUI_DESCRIPTION_TEXT ${SEC_Exodus} $(DESC_Exodus)
    !insertmacro MUI_DESCRIPTION_TEXT ${SEC_SSL} $(DESC_SSL)
    !insertmacro MUI_DESCRIPTION_TEXT ${SEC_Bleed} $(DESC_Bleed)
    !insertmacro MUI_DESCRIPTION_TEXT ${SEC_Locale} $(DESC_Locale)
    !insertmacro MUI_DESCRIPTION_TEXT ${SEC_Plugins} $(DESC_Plugins)
    !include "plugin-desc-new.nsi"
!insertmacro MUI_FUNCTION_DESCRIPTION_END


/*
    functions
*/
Function .onInit
    Call funcMigrateToHKLM
    Call funcInitCustomShell
    Call funcInstTypeSet
FunctionEnd

Function TurnOff
    Exch $0
    Push $1
    SectionGetFlags $0 $1
    IntOp $1 $1 & ${SECTION_OFF}
    SectionSetFlags $0 $1
    Pop $1
FunctionEnd

Function funcMigrateToHKLM
!ifdef USE_HKLM_KEY
    ; Installer language key
    ClearErrors
    ReadRegStr "$0" HKCU "${PRODUCT_REGISTRY_KEY}" "${INSTALLER_LANGUAGE_KEY}"
    StrCmp "$0" "" +3
        WriteRegStr HKLM "${PRODUCT_REGISTRY_KEY}" "${INSTALLER_LANGUAGE_KEY}" "$0"
        DeleteRegValue HKCU "${PRODUCT_REGISTRY_KEY}" "${INSTALLER_LANGUAGE_KEY}"
    ; Install path key
    ClearErrors
    ReadRegStr "$0" HKCU "${PRODUCT_REGISTRY_KEY}" "${PRODUCT_INSTALL_PATH_KEY}"
    StrCmp "$0" "" +3
        WriteRegStr HKLM "${PRODUCT_REGISTRY_KEY}" "${PRODUCT_INSTALL_PATH_KEY}" "$0"
        DeleteRegValue HKCU "${PRODUCT_REGISTRY_KEY}" "${PRODUCT_INSTALL_PATH_KEY}"
    ; Product run key
    ClearErrors
    ReadRegStr "$0" HKCU "${PRODUCT_RUN_KEY}" "${PRODUCT}"
    StrCmp "$0" "" +3
        WriteRegStr HKLM "${PRODUCT_RUN_KEY}" "${PRODUCT}" "$0"
        DeleteRegValue HKCU "${PRODUCT_RUN_KEY}" "${PRODUCT}"
    ; Product locales key
    ClearErrors
    ReadRegStr "$0" HKCU "${PRODUCT_REGISTRY_KEY}" "${PRODUCT_LOCALES_KEY}"
    StrCmp "$0" "" +3
        WriteRegStr HKLM "${PRODUCT_REGISTRY_KEY}" "${PRODUCT_LOCALES_KEY}" "$0"
        DeleteRegValue HKCU "${PRODUCT_REGISTRY_KEY}" "${PRODUCT_LOCALES_KEY}"
    ; Product Start Menu key
    ClearErrors
    ReadRegStr "$0" HKCU "${PRODUCT_REGISTRY_KEY}" "${INSTALLER_STARTMENU_KEY}"
    StrCmp "$0" "" +3
        WriteRegStr HKLM "${PRODUCT_REGISTRY_KEY}" "${INSTALLER_STARTMENU_KEY}" "$0"
        DeleteRegValue HKCU "${PRODUCT_REGISTRY_KEY}" "${INSTALLER_STARTMENU_KEY}"
    ; Move the shortcuts
    SetShellVarContext current
    StrCmp "$0" "" +19
    ClearErrors
    FindFirst "$R0" "$R1" "$SMPROGRAMS\$0\${PRODUCT}${LINK_EXTENSION}"
    IfErrors +3
        StrCpy "$1" "1" ; Start Menu Exodus link
        Delete "$SMPROGRAMS\$0\${PRODUCT}${LINK_EXTENSION}"
    FindClose "$R0"
    ClearErrors
    FindFirst "$R0" "$R1" "$SMPROGRAMS\$0\${PRODUCT_UNINSTALLER}${LINK_EXTENSION}"
    IfErrors +3
        StrCpy "$2" "1" ; Uninstall link
        Delete "$SMPROGRAMS\$0\${PRODUCT_UNINSTALLER}${LINK_EXTENSION}"
    FindClose "$R0"
    ClearErrors
    FindFirst "$R0" "$R1" "$SMPROGRAMS\$0\${PRODUCT} ${HOMEPAGE}${LINK_EXTENSION}"
    IfErrors +3
        StrCpy "$3" "1" ; Exodus Homepage link
        Delete "$SMPROGRAMS\$0\${PRODUCT} ${HOMEPAGE}${LINK_EXTENSION}"
    FindClose "$R0"
    ClearErrors
    FindFirst "$R0" "$R1" "$DESKTOP\${PRODUCT}${LINK_EXTENSION}"
    IfErrors +3
        StrCpy "$4" "1" ; Desktop Exodus link
        Delete "$DESKTOP\${PRODUCT}${LINK_EXTENSION}"
    FindClose "$R0"
    ClearErrors
    FindFirst "$R0" "$R1" "$QUICKLAUNCH\${PRODUCT}${LINK_EXTENSION}"
    IfErrors +3
        StrCpy "$5" "1" ; Quick Launch Exodus link
        Delete "$QUICKLAUNCH\${PRODUCT}${LINK_EXTENSION}"
    FindClose "$R0"
    SetShellVarContext all
    ReadRegStr "$R0" HKLM "${PRODUCT_REGISTRY_KEY}" "${PRODUCT_INSTALL_PATH_KEY}"
    IntCmpU '$1' '1' 0 +2 +2
        CreateShortcut "$SMPROGRAMS\$0\${PRODUCT}${LINK_EXTENSION}" "$R0\${PRODUCT}${EXEC_EXTENSION}"
    IntCmpU '$2' '1' 0 +2 +2
        CreateShortcut "$SMPROGRAMS\$0\${PRODUCT_UNINSTALLER}${LINK_EXTENSION}" "$R0\${PRODUCT_UNINSTALLER}${EXEC_EXTENSION}"
    IntCmpU '$3' '1' 0 +2 +2
        CreateShortcut "$SMPROGRAMS\$0\${PRODUCT} ${HOMEPAGE}${LINK_EXTENSION}" "${HOME_URL}"
    IntCmpU '$4' '1' 0 +2 +2
        CreateShortcut "$DESKTOP\${PRODUCT}${LINK_EXTENSION}" "$R0\${PRODUCT}${EXEC_EXTENSION}"
    IntCmpU '$5' '1' 0 +2 +2
        CreateShortcut "$QUICKLAUNCH\${PRODUCT}${LINK_EXTENSION}" "$R0\${PRODUCT}${EXEC_EXTENSION}"
    ; Wrap and remove old empty keys (only if the keys are empty,
    ; so user preferences files won't be moved away)
    DeleteRegKey /ifempty HKCU "${PRODUCT_RESTART_KEY}"
    DeleteRegKey /ifempty HKCU "${PRODUCT_REGISTRY_KEY}"
    ClearErrors
!endif
FunctionEnd

Function funcInitCustomShell ; Init and localize the custom shell dialog
    !insertmacro MUI_INSTALLOPTIONS_EXTRACT "${CUSTOMSHELL}${INI_EXTENSION}"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "${CUSTOMSHELL}${INI_EXTENSION}" "${CUSTOMSHELL_FIELD1}" \
        "${CUSTOMSHELL_OPTION_TEXT}" "$(DESC_CustomShellField1)"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "${CUSTOMSHELL}${INI_EXTENSION}" "${CUSTOMSHELL_FIELD2}" \
        "${CUSTOMSHELL_OPTION_TEXT}" "$(DESC_CustomShellField2)"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "${CUSTOMSHELL}${INI_EXTENSION}" "${CUSTOMSHELL_FIELD3}" \
        "${CUSTOMSHELL_OPTION_TEXT}" "$(DESC_CustomShellField3)"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "${CUSTOMSHELL}${INI_EXTENSION}" "${CUSTOMSHELL_FIELD4}" \
        "${CUSTOMSHELL_OPTION_TEXT}" "$(DESC_CustomShellField4)"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "${CUSTOMSHELL}${INI_EXTENSION}" "${CUSTOMSHELL_FIELD5}" \
        "${CUSTOMSHELL_OPTION_TEXT}" "$(DESC_CustomShellField5)"
FunctionEnd

Function funcInstTypeSet ; Instalation type localization
    Call funcSectionSetInInst
FunctionEnd

Function funcSectionSetInInst ; Section installation type setting
    !insertmacro SetSectionFlag "${SEC_Exodus}" "${SF_BOLD}"
    !insertmacro SetSectionFlag "${SEC_Exodus}" "${SF_RO}"
    !insertmacro UnselectSection "${SEC_Plugins}"

    ; BRANDING: To turn off bleeding edge updates,
    ; Comment out the following line.
    !insertmacro UnselectSection "${SEC_Bleed}"

    ; if in silent mode, and locales were installed last time, reinstall them
    Push "${INSTALLER_SWITCH_SILENT}"
    Call funcGetConfigParam
    Pop $0
    IntCmpU '$0' '1' silent
    ; turn off locales by default
!ifdef USE_HKLM_KEY
    DeleteRegValue HKLM "${PRODUCT_REGISTRY_KEY}" "${PRODUCT_LOCALES_KEY}"
!else
    DeleteRegValue HKCU "${PRODUCT_REGISTRY_KEY}" "${PRODUCT_LOCALES_KEY}"
!endif
    !insertmacro UnselectSection "${SEC_Locale}"
    goto locale_done
  silent:
!ifdef USE_HKLM_KEY
    ReadRegStr "$0" HKLM "${PRODUCT_REGISTRY_KEY}" "${PRODUCT_LOCALES_KEY}"
!else
    ReadRegStr "$0" HKCU "${PRODUCT_REGISTRY_KEY}" "${PRODUCT_LOCALES_KEY}"
!endif
    IntCmpU '$0' '1' locale_done
    !insertmacro UnselectSection "${SEC_Locale}"
    goto locale_done
  locale_done:
!ifndef NO_NETWORK
    !insertmacro UnselectSection "${SEC_SSL}"
!endif
    !include "plugin-off-new.nsi"
FunctionEnd

; NotifyInstances
Function NotifyInstances ; Closes all running instances of Exodus
    Push $0
    Push $1
  start:
    StrCpy "$1" '0'
    ; check to see if we have any instances
    ; if we do, show a warning..
    FindWindow "$0" "${PRODUCT_WINDOWCLASS}" "" '0'
    IntCmpU '$0' '0' done
  loop:
    FindWindow "$0" "${PRODUCT_WINDOWCLASS}" "" '0'
    IntCmpU '$0' '0' done
    !define MUI_FINISHPAGE_RUN ""
    SendMessage "$0" '6374' '0' '0'
    Sleep '100'
    IntOp '$1' '$1' + '1'
    IntCmpU '$1' '30' prompt
    Goto loop
  prompt:
    MessageBox MB_RETRYCANCEL|MB_ICONEXCLAMATION \
        "$(MSG_NotifyInstances)" IDRETRY start
    ; cancel
    Quit
  done:
    ; wait for shutdowns to complete
    Sleep '1000'
    Pop $1
    Pop $0
FunctionEnd

Function funcGetWindowsVersion ; faster than GetWindowsVersion (cannot be tampered with)
    Push $R0
    Push $R1
    Call funcGetVersionExA
    IntCmpU '$3' '2' winnt win9x verX
    winnt:
        IntCmpU '$0' '5' 0 winnt34 verX
        winnt5:
            IntCmpU '$1' '0' winnt2000 error
            IntCmpU '$1' '1' winntXP
            IntCmpU '$1' '2' winntNET 0 verX
            winnt2000:
                StrCpy "$R0" "2000"
                Goto end
            winntXP:
                StrCpy "$R0" "XP"
                Goto end
            winntNET:
                StrCpy "$R0" ".NET Server"
                Goto end
        winnt34:
            IntCmpU '$0' '4' 0 winnt3x winnt5
                IntCmpU '$1' '0' 0 error verX
                    StrCpy "$R0" "NT $0.$1"
                    Goto end
            winnt3x:
                IntCmpU '$1' '1' 0 error winnt351
                    StrCpy "$R0" "NT $0.$1"
                    Goto end
                    winnt351:
                        IntCmpU '$1' '51' 0 verX verX
                            StrCpy "$R0" "NT $0.$1"
                            Goto end
    win9x:
        IntCmpU '$0' '4' 0 win3x verX
            IntCmpU '$1' '0' 0 error winwdm
                StrCpy "$R0" "95"
                Goto end
            winwdm:
                IntCmpU '$1' '90' winme 0 verX
                    IntCmpU '$1' '10' 0 verX verX
                        StrCpy "$R0" "98"
                        Goto end
                winme:
                    StrCpy "$R0" "ME"
                    Goto end
        win3x:
            IntCmpU '$0' '3' 0 verX verX
                StrCpy "$R0" "$0.$1"
                Goto end
    verX:
        StrCpy "$R0" "Unsupported version $0.$1 (Platform $3)"
        Goto end
    error:
        StrCpy "$R0" "Error: logical comparision failed!"
    end:
    Pop $R1
    Exch $R0
FunctionEnd

Function funcGetVersionExA ; Get Windows version information
/*
    struct OSVERSIONINFO {
        unsigned long dwOSVersionInfoSize;
        unsigned long dwMajorVersion;
        unsigned long dwMinorVersion;
        unsigned long dwBuildNumber;
        unsigned long dwPlatformId;
        unsigned char[128]* szCSDVersion;
    };

    Returns:

    $0 - Major
    $1 - Minor
    $2 - Build
    $3 - Platform
    $4 - Service Pack
*/
    System::Call '*(&l4, i, i, i, i, &t128) i (,,,,,) .r10'
    System::Call 'kernel32::GetVersionExA(i) i (r10)'
    System::Call '*$R0(&l4, i, i, i, i, &t128) i (,.r0, .r1, .r2, .r3, .r4)'
    System::Free '$R0'
FunctionEnd

Function funcOnGuiInit
!ifndef DEBUG
    Call funcCheckAdmin
!endif
FunctionEnd

Function funcCheckAdmin ; Installation only allowed for Administrators
!ifdef USE_HKLM_KEY
    ClearErrors
    UserInfo::GetName
    IfErrors done
    Pop $0
    UserInfo::GetAccountType
    Pop $1
    StrCmp "$1" "Admin" +3 0
        MessageBox MB_TOPMOST|MB_ICONEXCLAMATION|MB_OK "$(MSG_NoAdmin)"
        Abort
  done:
!endif
FunctionEnd

Function funcGetConfigParam
/*
    Checks to see if a given parameter was used
    usage:
        Push "</My parameter>"
        Call funcGetConfigParam
        Pop $0
        IntCmpU '$0' '1' if_found [if_notfound]
*/
    Exch $0
    Call GetParameters
    Pop $R0
    ${StrStr} "$R0" "$R0" "$0"
    StrLen "$0" "$R0"
    IntCmpU '$0' '0' +3 +3 0
        StrCpy "$0" "1"
        Goto +2
        StrCpy "$0" "0"
    Exch $0
FunctionEnd

 ; GetParameters
 ; input, none
 ; output, top of stack (replaces, with e.g. whatever)
 ; modifies no other variables.
Function GetParameters
    Push $R0
    Push $R1
    Push $R2
    Push $R3

    StrCpy $R2 1
    StrLen $R3 $CMDLINE

    ;Check for quote or space
    StrCpy $R0 $CMDLINE $R2
    StrCmp $R0 '"' 0 +3
         StrCpy $R1 '"'
        Goto loop
    StrCpy $R1 " "

  loop:
    IntOp $R2 $R2 + 1
    StrCpy $R0 $CMDLINE 1 $R2
    StrCmp $R0 $R1 get
    StrCmp $R2 $R3 get
    Goto loop

  get:
    IntOp $R2 $R2 + 1
    StrCpy $R0 $CMDLINE 1 $R2
    StrCmp $R0 " " get
    StrCpy $R0 $CMDLINE "" $R2

    Pop $R3
    Pop $R2
    Pop $R1
    Exch $R0
FunctionEnd

Function SetCustomShell
    !insertmacro MUI_HEADER_TEXT "$(CUSTOMSHELL_TITLE)" \
        "$(CUSTOMSHELL_SUBTITLE)"

    Push $R0
    Push $R1
    Push $R2

    !insertmacro MUI_INSTALLOPTIONS_INITDIALOG "${CUSTOMSHELL}${INI_EXTENSION}"
    Pop $R0

    GetDlgItem "$R1" "$R0" "${CUSTOMSHELL_FIELD1_HWND}"

    ;$R1 contains the HWND of the first field
    CreateFont "$R2" "${CUSTOMSHELL_FONT}" "${CUSTOMSHELL_FONT_HEIGHT}" "${CUSTOMSHELL_FONT_WEIGHT}"
    SendMessage "$R1" "${WM_SETFONT}" "$R2" '0'

    GetDlgItem "$R1" "$R0" "${CUSTOMSHELL_FIELD5_HWND}"

    ;$R1 contains the HWND of the first field
    CreateFont "$R2" "${CUSTOMSHELL_FONT}" "${CUSTOMSHELL_FONT_HEIGHT}" "${CUSTOMSHELL_FONT_WEIGHT}" /ITALIC
    SendMessage "$R1" "${WM_SETFONT}" "$R2" '0'

    !insertmacro MUI_INSTALLOPTIONS_SHOW

    Pop $R1
    Pop $R1
    Pop $R0

FunctionEnd

Var "PluginFilename"

Function InstallPlugin
    Exch $1	
    
	;CreateDirectory "$INSTDIR\${PLUGINS_DIR}"
	;File "/oname=$INSTDIR\${PLUGINS_DIR}\$R0" "${PLUGINS_DIR}\$R0"
	
    ;File /nonfatal "/oname=$NSISPATH\${DIR}\CVS\Entries.log" "..\${DIR}\CVS\Entries.log"	
    ;SetOutPath "$INSTDIR\${PLUGINS_DIR}"
    ;File ${PLUGINS_DIR}\$1${DLL_EXTENSION}
    ;SetOutPath $INSTDIR
    Pop $R0
FunctionEnd

Function DownloadPlugin
    Exch $1

    CreateDirectory "$INSTDIR\${PLUGINS_DIR}"
    NSISdl::download "${HOME_URL}/${PLUGINS_DOWNLOAD_PATH}/$1${ZIP_EXTENSION}" \
        "$INSTDIR\${PLUGINS_DIR}\$1${ZIP_EXTENSION}"
    Pop $R0
    StrCmp $R0 "${NSISDL_SUCCESSFUL}" unzip
    Abort "$(MSG_PluginAbort)"

  unzip:
    !insertmacro MUI_ZIPDLL_EXTRACTALL "$INSTDIR\${PLUGINS_DIR}\$1${ZIP_EXTENSION}" "$INSTDIR\${PLUGINS_DIR}"
!ifndef DEBUG
    Delete "$INSTDIR\${PLUGINS_DIR}\$1${ZIP_EXTENSION}"
!endif
FunctionEnd

Function .onInstSuccess
    ; start up any instances that were previously closed.
  outer_loop:
    EnumRegKey "$1" HKCU "${PRODUCT_RESTART_KEY}" '0'
    StrCmp "$1" "" abort

    ; set the PWD to the last PWD, so that the command line args
    ; have the same context
    ReadRegStr "$2" HKCU "${PRODUCT_RESTART_KEY}\$1" "${PRODUCT_RESTART_CWD_KEY}"
    StrCmp "$2" "" done
    SetOutPath "$2"

    ReadRegStr "$2" HKCU "${PRODUCT_RESTART_KEY}\$1" "${PRODUCT_RESTART_CMDLINE_KEY}"
    StrCmp $2 "" done

    ; if it doesn't have .exe, add the Exodus.exe to the front of
    ; the command line.  This is so that the first time an "old"
    ; install upgrades, it will still work, since the "old" versions
    ; didn't store the executable name in cmdline.
    ${StrStr} "$3" "$2" "${EXEC_EXTENSION}"
    StrCmp "$3" "" insert exec

  insert:
    StrCpy "$2" '"$INSTDIR\${PRODUCT}${EXEC_EXTENSION}" "$2"'

  exec:
    DetailPrint "$2"
    Exec "$2"
    SetAutoClose true

  done:
    DeleteRegKey HKCU "${PRODUCT_RESTART_KEY}\$1"

    Goto outer_loop
  abort:
FunctionEnd

Function un.onInit ; On Uninstall initialization
    ;!insertmacro MUI_UNGETLANGUAGE
    Call un.funcInitCustomShell
FunctionEnd

Function un.funcOnGuiInit
!ifndef DEBUG
    Call un.funcCheckAdmin
!endif
FunctionEnd

Function un.funcInitCustomShell ; Init and localize the custom shell unistall dialog
    !insertmacro MUI_INSTALLOPTIONS_EXTRACT "${UNCUSTOMSHELL}${INI_EXTENSION}"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "${UNCUSTOMSHELL}${INI_EXTENSION}" "${CUSTOMSHELL_FIELD1}" \
        "${CUSTOMSHELL_OPTION_TEXT}" "$(DESC_unCustomShellField1)"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "${UNCUSTOMSHELL}${INI_EXTENSION}" "${CUSTOMSHELL_FIELD2}" \
        "${CUSTOMSHELL_OPTION_TEXT}" "$(DESC_unCustomShellField2)"
FunctionEnd

Function un.funcCheckAdmin ; Uninstallation only allowed for Administrators
!ifdef USE_HKLM_KEY
    ClearErrors
    UserInfo::GetName
    IfErrors done
    Pop $0
    UserInfo::GetAccountType
    Pop $1
    StrCmp "$1" "Admin" +3 0
        MessageBox MB_TOPMOST|MB_ICONEXCLAMATION|MB_OK "$(MSG_NoAdmin)"
        Abort
  done:
!endif
FunctionEnd

Function un.SetCustomShell
    !insertmacro MUI_HEADER_TEXT "$(UNCUSTOMSHELL_TITLE)" \
        "$(UNCUSTOMSHELL_SUBTITLE)"

    Push $R0
    Push $R1
    Push $R2

    !insertmacro MUI_INSTALLOPTIONS_INITDIALOG "${UNCUSTOMSHELL}${INI_EXTENSION}"
    Pop $R0

    GetDlgItem "$R1" "$R0" "${CUSTOMSHELL_FIELD1_HWND}"

    ;$R1 contains the HWND of the first field
    CreateFont "$R2" "${CUSTOMSHELL_FONT}" "${CUSTOMSHELL_FONT_HEIGHT}" "${CUSTOMSHELL_FONT_WEIGHT}"
    SendMessage "$R1" "${WM_SETFONT}" "$R2" '0'

    !insertmacro MUI_INSTALLOPTIONS_SHOW

    Pop $R1
    Pop $R1
    Pop $R0

FunctionEnd

Function un.funcRemoveUserLogs
/*
    Function to remove the user logs if specified by the user
    Usage:
        Push <path to the exodus.xml file>
        Call un.funcRemoveUserLogs
        (Optional) Pop <error check>
    The poped value if empty means that the path wasn't set
    in the exodus.xml file (well not a problem, just go on).
*/
    Exch $0
    Push $0
    Call un.funcMakeMultiLineXMLFile
    Pop $0
    StrCpy $1 "$0"
    Push $0
    Call un.funcGetUserLogsPath
    Pop $0
    StrCmp "$0" "" notfound
    RmDir /r "$0"
  notfound:
    Delete "$1"
    Exch $0
FunctionEnd

Function un.funcMakeMultiLineXMLFile
/*
    Function to convert a one line XML file to a multiline one
    since NSIS functions file functions are string orientated.
    This function should need the StrFunc.nsh inclusion (if the
    file would allow to be included in the uninstaller).
    Usage:
        Push <name of file to convert>
        Call un.funcMakeMultiLineXMLFile
        Pop <name of temporary multiline XML file>

    Don't forget to remove the temporary file when done.
*/
    Exch $0
    FileOpen $R1 "$0" 'r'
    GetTempFileName $0
    FileOpen $R0 "$0" 'w'
  loop:
    ClearErrors
    FileRead $R1 $R2
    IfErrors done
    ${un.StrRep} $R2 "$R2" "${XML_TAG_SEPARATORS}" "${XML_ML_TAG_SEPARATORS}"
    FileWrite $R0 $R2
    Goto loop
  done:
    FileClose $R0
    FileClose $R1
    Exch $0
FunctionEnd

Function un.funcGetUserLogsPath
/*
    Function to get the path to the user logs.
    This function should need the StrFunc.nsh inclusion (if the
    file would allow to be included in the uninstaller).
        Push <name of file to parse>
        Call un.funcGetUserLogsPath
        Pop <path to the user logs>
*/
    Exch $0
    FileOpen $R0 "$0" 'r'
  loop:
    ClearErrors
    FileRead $R0 $0
    IfErrors notfound
    ${un.StrStrAdv} $0 "$0" '${LOG_PATH_XML_TAG}' '>' '>' '0' '0'
    StrCmp "$0" "" 0 found
    Goto loop
  found:
    ${un.StrStrAdv} $0 "$0" '${XML_TAG_END}' '<' '<' '0' '0'
    Goto done
  notfound:
    StrCpy $0 ""
  done:
    FileClose $R0
    Exch $0
FunctionEnd

; eof
