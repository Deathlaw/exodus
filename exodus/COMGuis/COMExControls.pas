unit COMExControls;
{
    Copyright 2006, Peter Millard

    This file is part of Exodus.

    Exodus is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    Exodus is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Exodus; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
}


{-----------------------------------------------------------------------------}
{-----------------------------------------------------------------------------}
{ This is autogenerated code using the COMGuiGenerator. DO NOT MODIFY BY HAND }
{-----------------------------------------------------------------------------}
{-----------------------------------------------------------------------------}


{$WARN SYMBOL_PLATFORM OFF}

interface
uses
ComObj, ActiveX, ExodusCOM_TLB, Forms, Classes, Controls, StdCtrls, StdVcl;

function getCOMControl(o: TObject): IExodusControl;

implementation
uses
    COMExFont,Graphics,COMExPanel,ExtCtrls,COMExPopupMenu,COMExMenuItem,Menus,COMExButton,COMExLabel,COMExEdit,COMExCheckBox,COMExRadioButton,COMExListBox,COMExComboBox,COMExRichEdit,ComCtrls;

function getCOMControl(o: TObject): IExodusControl;
begin
    if (o is TFont) then begin 
        Result := IExodusControl(TExControlFont.Create(TFont(o)));
        exit;
    end;
    if (o is TPanel) then begin 
        Result := IExodusControl(TExControlPanel.Create(TPanel(o)));
        exit;
    end;
    if (o is TMenuItem) then begin 
        Result := IExodusControl(TExControlMenuItem.Create(TMenuItem(o)));
        exit;
    end;
    if (o is TPopupMenu) then begin 
        Result := IExodusControl(TExControlPopupMenu.Create(TPopupMenu(o)));
        exit;
    end;
    if (o is TButton) then begin 
        Result := IExodusControl(TExControlButton.Create(TButton(o)));
        exit;
    end;
    if (o is TLabel) then begin 
        Result := IExodusControl(TExControlLabel.Create(TLabel(o)));
        exit;
    end;
    if (o is TEdit) then begin 
        Result := IExodusControl(TExControlEdit.Create(TEdit(o)));
        exit;
    end;
    if (o is TCheckBox) then begin 
        Result := IExodusControl(TExControlCheckBox.Create(TCheckBox(o)));
        exit;
    end;
    if (o is TRadioButton) then begin 
        Result := IExodusControl(TExControlRadioButton.Create(TRadioButton(o)));
        exit;
    end;
    if (o is TListBox) then begin 
        Result := IExodusControl(TExControlListBox.Create(TListBox(o)));
        exit;
    end;
    if (o is TComboBox) then begin 
        Result := IExodusControl(TExControlComboBox.Create(TComboBox(o)));
        exit;
    end;
    if (o is TRichEdit) then begin 
        Result := IExodusControl(TExControlRichEdit.Create(TRichEdit(o)));
        exit;
    end;
end;

end.
